11097008,"@piyushnarang looks like the package name does not match the file name. not scrooge/cascading, but we have cascading.scrooge.",2018-01-26 06:22:06,response,0,2
6636815,I can push a follow up fix for this tomorrow. ,2018-01-26 06:57:59,response,0,13
7111,"can we put the return type on this public method?

I'm confused where Quotations are coming into the picture here. Can you comment?",2018-01-20 06:57:28,suggestion,-2,10
7111,"wow, this is pretty nice...

Okay...",2018-01-20 07:05:09,response,2,13
7111,can we replace this with an equivalent test that we can see the caller correctly?,2018-01-18 10:01:11,suggestion,-3,12
7111,why do we need a `Quoted` here. Not clear to me. Just to get position information of the caller?,2018-01-18 09:57:19,response,-2,3
7111,"we can't filter here, can we?",2018-01-20 07:11:55,response,-2,4
7111,"since semigroups emit the whole object, do we really need the quoted here? Seems like we can assume there can be no projection/filtering here.",2018-01-20 07:09:59,response,-3,7
7111,can we look inside the Fold?,2018-01-20 07:11:39,suggestion,-2,6
7111,"we can't really filter here, can we? why to we need quoted?",2018-01-20 07:10:32,response,-3,4
7111,"I don't think we can look inside the aggregrator and filter, can we? Can we really use the quoted meaningfully?",2018-01-20 07:11:06,response,-2,7
7111,"we can't filter here, can we?",2018-01-20 07:11:29,response,-2,4
7111,"I'm a bit confused why we need the implicits here. Can you comment? Can't we statically see anything we need for the purposes of projection? Is this just to collect line numbers?
",2018-01-20 07:07:45,suggestion,-2,3
7111,we can't project/filter here right since we know sorting is 1 in 1 out.,2018-01-20 07:09:19,response,-2,4
7111,"I'd rather not take an implicit here if it can't contribute to row/column filtering, which I can't see how it can in the case of take.",2018-01-20 07:08:57,response,-3,10
7111,can't we avoid quoted here?,2018-01-20 07:10:41,response,-3,7
7111,"why don't we want `Quoted` here. Can you add the comment why? Is it the assumption that users get full control of the note, and there is no need to add the line/file info that Quoted can give?",2018-01-20 10:03:56,suggestion,-3,3
7111,"similar to above, can we not keep dummy implicit Quoted around. I fear we won't know where we are actually sending them. I prefer to be explicit with the dummies (and add a comment to that effect).",2018-01-20 10:15:05,suggestion,-4,10
7111,should we take a `Quoted` in the constructor actually? That should be created where we call `.sketch` which I think could improve reporting on internal methods.,2018-01-20 09:58:34,suggestion,-1,11
7111,same comment: should we take `implicit q: Quoted` on the constructor?,2018-01-20 09:59:35,suggestion,-1,11
7111,I don't think we are using `m` here are we? This is really just a typesafe cast.,2018-01-20 10:02:50,response,-2,10
7111,don't we need to accumulate the `quoted`? Seems like we need a `Semigroup` on quoted (maybe a `Monoid`).,2018-01-20 10:14:10,feedback,-2,10
7111,Can we pass `m` explicitly to `Sketched` so we can see that it is not discarded?,2018-01-20 10:07:44,suggestion,-2,10
7111,"I'm nervous about this hanging out implicitly. Can we not use it implicitly and instead explicitly call it: `interalQuoted` where needed? I fear this will actually destroy our `Quoted` information when we are doing composing operations, and defeat the who",2018-01-20 10:13:21,suggestion,-4,10
280540,@johnynek `desc` already has the description information from `quoted` (see `TypedPipe.withQuoted`). I think we don't need to accumulate `quoted` at this point since the purpose is to set the description only (no projections).,2018-01-26 07:32:24,suggestion,0,10
280540,fixed,2018-01-26 07:42:09,response,0,13
280540,removed,2018-01-26 07:42:15,response,0,13
280540,just updated the scaladoc,2018-01-26 07:42:32,response,0,13
280540,fixed,2018-01-26 07:42:43,response,0,13
280540,fixed,2018-01-26 07:42:51,response,0,13
280540,fixed,2018-01-26 07:43:07,response,0,13
319889,"should we leave this commented out/enabled ? (just don't know if we have any concerns over debug's correctness, we won't test it like this. But that might be fine)",2018-01-30 00:18:28,suggestion,0,4
319889,did you mean to drop these to 500 in the commit/merge ? ,2018-01-30 00:53:52,response,-1,4
7111,"I pretty much hate scalatest. It was ignoring this parameter until I made this extend PropertyChecks. After I did this, 500 checks takes a while (200 seconds). I figured that would be enough for now.",2018-01-30 01:04:22,response,-6,9
7111,We almost never use debug in real life and it was making test logs unreadable.,2018-01-30 01:05:00,response,-3,13
319889,"Yeah its a great exemplar of something with 2 many ways to do anything/everything and then its just too hard to do things right.

???? 
",2018-01-30 01:30:25,response,1,13
7111,"with this, `Mode` is really just an Execution.Writer factory (the thing that holds the mutable state while an Execution is running).

This should be source compatible with everything we have now since Mode was never sealed, so case matching always had t",2018-02-03 11:47:35,response,-1,9
7111,make sure to call `op.result` exactly one time.,2018-02-03 11:50:42,suggestion,-1,10
7111,we can clean up these `???` by simplifying `Mode` in this PR.,2018-02-03 11:49:26,response,-1,1
7111,dagon improving type-safety! :),2018-02-03 11:50:17,response,4,13
6636815,nice!,2018-02-07 04:39:22,response,6,13
6636815,needed? ,2018-02-07 04:47:56,response,-2,7
7111,"maybe not, but CI being what it is, we can remove later.... I am also trying to address some possible performance issues with giant graphs.",2018-02-07 06:45:39,response,0,4
7111,this won't get called in the case where we write DOTs in Tool. Need to fix.,2018-02-09 06:18:58,feedback,-2,12
319889,:( i guess we lack a test for that path,2018-02-09 08:28:47,response,-2,12
7111,"actually, I was wrong, we call `buildFlow`, which will make sure this stuff gets built, but we don't have a test for DOT generation, I don't think.",2018-02-09 09:03:18,response,0,2
319889,"Shame no test, but its not a critical path",2018-02-10 01:27:07,response,-1,12
44017,"This is where I get a little bit lost - the rest of this looks great. I'm assuming this doesn't handle a case that would need to be a `writeThrough` in `Execution`? If so, I'm missing how, and if not, it's not clear to me what the failure would look like;",2018-02-10 02:42:51,response,1,4
44017,Nit: this comment seems to have gotten truncated (though it's clear from context),2018-02-10 02:36:27,response,-2,13
7111,"That is already handled by Executions:
```scala
pipe1.writeExecution(sink1)
  .zip(pipe1.map(fn).writeExecution(sink2))
```
will work. Internally the optimizer sees the fork and that is exposed to cascading (they share everything above the fork).

",2018-02-10 03:12:28,suggestion,0,10
319889,we were loosing some information before here i imagine?,2018-02-14 21:58:48,response,-1,13
319889,"Oh nm i see, this logic got moved out of this file",2018-02-14 21:59:15,response,1,8
319889,Do we have enough optimization rules to pull `.map` functions into the reducer ? or does it make more sense to explicitly not do that and let user code do mapValues/etc.. to stay in the reducer?,2018-02-14 22:12:01,response,-1,7
7111,"This partitioning is not yet optimal. It may wind up in more steps that cascading would have taken. It would be nice to get it so that is never the case, and we could just turn it on all the time.

Since the optimizer works, for now, on the same nodes a",2018-02-15 01:30:49,suggestion,-1,7
32164772,this is unused? ,2018-02-16 11:22:28,response,-2,1
7111,Nope. I somehow forgot it and implemented without it below. Good catch.,2018-02-16 11:41:28,response,3,13
319889,conside => consider?,2018-02-17 05:38:31,suggestion,-2,1
319889,commented test?,2018-02-17 05:41:13,suggestion,-2,3
319889,commented test?,2018-02-17 05:41:37,suggestion,-2,3
319889,"This is super neet/nice, could you expand the comments here -- don't think i'd have followed other than I know what your aiming to do.

(Motivation/why we are tracking/what we are aiming to do with it)",2018-02-17 05:42:49,suggestion,4,3
319889,why is a counter pipe `| Write` ? ,2018-02-17 05:44:38,response,-2,3
7111,"it doesn't need to be, `Write` is the bottom, so `x | Write = x`.",2018-02-17 05:52:06,response,-1,8
7111,"this was an added safety check to make sure we didn't overlook type of Execution (we didn't, but could in the future I guess). Since this would only get hit if we have correct code in the case that two items have collided, but are really different, it is ",2018-02-17 07:58:23,response,0,4
319889,we probably should block on this thread competing here?  -- or i'd be more inclined that this didn't use a thread at all but we could swallow the errors. (Threads have the unfortunate problem that either its a foreground thread and we'll have some unexpec,2018-02-18 08:01:25,suggestion,-1,9
7111,"sure. Sounds good. Only note: this is triggered in a thread anyway: it is called by `.onComplete` of a Future, so already it is on the threadpool independent of blocking the result on the Future. ",2018-02-18 08:35:50,response,2,9
319889,"From some light googling it feels like that will eventually be its own sort of bug around this -- its not a huge one in the sense cleaning up is an optimistic operation.

We could do a try {} around the cleanup block and put the Stop into the message qu",2018-02-18 09:38:50,suggestion,-1,4
7111,"I don't think I understand. We are already doing a try {} call inside the state cleanup. And the STOP message has already been sent (and that thread is not a daemon thread anyway).

https://github.com/twitter/scalding/blob/develop/scalding-core/src/main",2018-02-18 10:20:56,response,-2,5
319889,"Concretely what i mean is we do want to block the final future returning for this i believe, which means we want to move the stop from 
https://github.com/twitter/scalding/blob/develop/scalding-core/src/main/scala/com/twitter/scalding/typed/cascading_bac",2018-02-18 11:06:09,suggestion,-1,8
7111,"That won’t block the final future from returning. The final future returning *calls* finished. We register an onComplete of the final future to call finish.

We could convert onComplete to a transform and synchronously call this, but I’m not really sure",2018-02-18 13:36:20,suggestion,-2,10
319889,"Sorry your quite right, i hadn't quite tweaked that the STOP is really just occuring in the on complete itself. Now in practice i believe moving it below, or indeed I think undoing my first comment on this would make the issue go away -- since both thread",2018-02-19 04:24:08,response,1,8
7111,"Okay. I'll revert the fix keeping in mind this is easy to change in a point release since it does not change the API at all.

Thanks for thinking through some of these subtler issues.",2018-02-19 05:16:50,response,3,9
280540,"I find `FlowStateMap.mutate` too fragile, even after the fix. If someone changes the implementation of any of the other method calls to also mutate the global state, we'd have another potential bug.

Maybe `FlowStateMap.mutate` could take functions that",2018-02-21 13:44:13,suggestion,-2,4
7111,"I don’t think thread-local is safe because Execution is multi-threaded (via Future/ExectionContext). I don’t think your proposed fix will be correct.

I agree I don’t like FlowStateMap. Since you are at Twitter you could change the use of FlowDef to a G",2018-02-21 14:10:10,suggestion,-3,9
280540,"> I don’t think thread-local is safe because Execution is multi-threaded (via Future/ExectionContext). I don’t think your proposed fix will be correct.

This bug doesn't involve concurrency. It occurs when the same thread acquires the lock and does nest",2018-02-22 02:37:17,response,-2,9
7111,"I know this bug does not involve concurrency, but I don't see how we can use a ThreadLocal since planning is done in multiple threads. The FlowState cannot be thread-local state, it has to be accessible across threads.",2018-02-22 03:00:15,response,-1,9
280540,My proposal was to hold the deltas in a `ThreadLocal` and merge them if the `mutate` call is not nested. `FlowStateMap` would continue to use the weak hashmap.,2018-02-22 03:13:27,suggestion,0,10
7111,"PS: about Diffy note TypedPipeDiff which was created when we attempted something like this before. The E2E tests were a basic version of what you describe, but they are a selected set of jobs.",2018-02-22 03:17:36,response,0,10
319889,"To me these changes seem like a clear improvement in the state of the world. Cleaner interfaces , more comments. 

If someone wants to figure out multi-threaded interactions , or removing this entirely those feel like separate PR's?

Anyone -1 on just",2018-02-22 03:18:08,response,5,9
280540,"> If someone wants to figure out multi-threaded interactions , or removing this entirely those feel like separate PR's?

It's not really a concurrency/multi-thread issue. If we keep this global mutable state unprotected, it's easy to introduce other bug",2018-02-22 03:30:39,response,-1,9
7111,"Since we have made the unsafe mutate method private, I think we are in a good shape.

We don't seem to be communicating very well here. It seems like you comment implies that we haven't made the dangerous method private, also it seems like you are not c",2018-02-22 03:47:03,response,-3,6
319889,@fwbrasil I think you should press ahead and try build another PR and we can debate the pro's and con's of that approach on that PR. And just merge this since it fixes some handling/and improves things here. Incremental improvements should really be accep,2018-02-22 03:55:13,suggestion,-1,13
280540,"> We don't seem to be communicating very well here.

I've just replied on gitter. I think ""protected"" wasn't a good word. I'd like to restrict the implementation so developers can't introduce bugs like this one.

> It seems like you comment implies th",2018-02-22 04:42:44,response,-1,6
7111,this is 2 steps without ComposeReduceSteps,2018-02-24 09:36:32,response,-2,7
7111,this is 2 steps without ComposeReduceSteps,2018-02-24 09:36:40,response,-2,7
7111,this is 3 steps without ComposeReduceSteps,2018-02-24 09:36:57,response,-2,7
7111,this is 3 steps without ComposeReduceSteps,2018-02-24 09:37:06,response,-2,7
280540,Is there a guarantee that there aren't nested descriptions here?,2018-02-27 03:20:40,response,-2,12
7111,"There is not, but there is another optimization rule that collapses those, so this rule should run after that rule.",2018-02-27 03:52:22,response,-1,12
319889,"probably good to add a comment describing some of the logic here around the input sizes

This is that the RHS is composed of N streams and we only cache the far right of those streams in this case? ",2018-02-26 10:43:01,suggestion,-1,3
319889,Ohhh its how many of the rightStreams are already covered in prior joins by the left hand multijoin function? so we need to feed them in there?,2018-02-26 10:43:58,response,0,10
7111,"It is just an extra check (which should never possibly fail unless we have a programming bug) that the number of streams we are joining matches the the total joining operation we have.

Since we have one stream in leftMost, the others should be in right",2018-02-26 12:08:57,response,0,12
319889,i think they just register these to kryo so i imagine this should just hit the inefficient paths. For a normal execution app though this i guess does drop some sort of performance.,2018-03-06 22:50:18,suggestion,-1,7
319889,"don't need to bother updating this here, but i'd leave these to DISK_ONLY until we can figure out how/when we can upgrade the state. (Spark also has the output of shuffles persisted, so we might be able to get the planner to realize when we should have sh",2018-03-06 22:53:38,suggestion,-2,11
319889,since these partitions are ~usually ondisk or can fit in memory we might just want MapAlgebra.sumByKey possibly (or sort and fold i guess..). ,2018-03-06 22:58:51,suggestion,-1,11
17013,"It makes sense to have the `ToWrite` companion object be serializable if we are going to capture/serialize it, but it's not obvious to me how that would happen? Is that something we've observed?",2018-03-03 04:12:20,response,-2,3
17013,"It might be worth documenting (here or in `KryoHadoop.scala`) that our strategy for serializing captures pipes/executions is to skip these fields (so they're initialized to `null`) and to explicitly serialize them as `null`. At least, I think that's the s",2018-03-03 04:14:05,suggestion,-1,3
7111,they were captured inside the ToIterable Execution.,2018-03-03 04:15:30,response,0,10
17013,"OK, makes sense.",2018-03-03 04:15:46,response,4,13
7111,"yeah, that's a good idea, since they are only used in planning, it should be safe, as the note in KryoHadoop says, but copying here is probably good too.",2018-03-03 04:16:28,response,6,8
7111,this was actually the only test that could repro the issue.,2018-03-06 06:16:41,response,-1,12
319889,"small nit, but we should make this opt something longer, took me reading the impl to see it ment optimized and not some reference to optional",2018-03-07 23:14:36,suggestion,-3,2
280540,Are there changes to these classes or were they just moved?,2018-03-09 03:30:09,response,-1,11
7111,just moved.,2018-03-09 03:45:17,response,0,8
7111,"@fwbrasil note this pattern, like the case of FlowStateMap could fail if fn also calls update. We never do that, and this is a private method, but to be paranoid we check that state has not changed during the call to fn.",2018-03-09 03:52:03,response,-2,6
7111,"@fwbrasil note this was a potential bug: we were ignoring the Config in the mapping from original to optimized pipe, but Config can control the optimizations, so this would not be safe in general. We need to include the Config as part of the key as we do ",2018-03-09 03:46:55,response,-2,6
319889,what does start do? ,2018-03-12 00:03:47,response,0,1
7111,"It’s on the base trait. They are called to begin and end the Execution. Obviously I didn’t implement them yet.

Start probably does nothing on this Writer but finish will likely need to call unpersist on some RDD.",2018-03-12 01:01:24,response,1,10
7111,can we exercise this in a test where we throw in a FlowListener?,2018-04-03 09:10:40,suggestion,-2,12
7111,"let's use a single atomic call here and do `result.tryFailure`:
https://www.scala-lang.org/api/2.12.3/scala/concurrent/Promise.html#tryFailure(cause:Throwable):Boolean",2018-04-03 09:08:31,suggestion,1,12
94390,"done, thanks",2018-04-04 04:39:56,response,2,13
94390,"done, thanks",2018-04-04 04:40:02,response,2,13
94390,"nit: very confusing signature of `removeWrites`, without knowledge that `removeWrites` return original `flowState` is hard to understand this line. ",2018-04-19 01:08:33,suggestion,-2,1
94390,"nit: again confusing name and usage, `FlowState.merge` is an immutable operation, but `FlowStateMap.merge` is mutable, maybe we need use different name or somehow be more clear that we mutate fd here.",2018-04-19 01:17:29,suggestion,-2,2
94390,"nit: why we need here `Monoid.plus`? if `subFlowState.flowConfigUpdates` should be empty, we can do just `copy`.",2018-04-19 01:21:52,suggestion,-3,10
94390,"nit: why some arguments have `@transient`, another don't have it? do we serialize ast at all?",2018-04-19 01:24:10,suggestion,-2,3
280540,`final` for consistency?,2018-05-01 03:49:33,suggestion,-1,1
7111,Can you comment what this macro is and why it is needed?,2018-06-02 09:06:13,suggestion,1,3
7111,This version is out of date.,2018-06-02 09:06:59,response,-1,5
7111,What is this?,2018-06-02 09:05:25,response,-4,13
7111,If we introduce a new type here I’d like to be a sealed trait and either be an Ordering or an OrderedSerialization.,2018-06-02 09:07:50,suggestion,1,11
1443419,Note you can use listStatus to avoid additional fileStatus RPC later on for directory contents.,2018-06-21 01:22:12,suggestion,-1,7
134219,"I agree, but I don't want to intercept into current logic around `LocalFileSystem` in `listDir`.",2018-06-21 03:26:48,response,0,9
7111,I solved this in #1869 using broadcast.,2018-08-20 13:28:03,response,0,13
319889,not sure if it particularly matters since calling next on an empty iterator usually just throws an exception -- but this will stack overflow on next called on empty?,2018-08-20 21:28:38,response,-1,10
319889,Do we not need to call the MapGroup operator here? or are we guaranteed that its already been cogrouped/shuffled? ,2018-08-20 21:32:31,suggestion,-2,10
7111,"`next` is tailrec, so it won't stack overflow. If it is empty it will loop forever. Good catch.",2018-08-21 00:18:30,response,4,4
319889,"you can/probably should destroy the broadcast when your done with it... not sure if you can easily know that here though...

(I've only found one case where its caused problems not destroying them, they usually are eventually GC'd anyway ) ",2018-08-20 21:40:31,suggestion,-2,4
319889,"if your defining these things, these days i'd take a SparkSession than a spark context, you can get a context from a session but not vice versa",2018-08-20 21:41:09,suggestion,0,11
7111,"yeah, adding clean ups it a bit challenging, I was thinking of punting for now.

Basically, the `Op[A]` would need to return ` Future[(RDD[_ <: A], () => Future[Unit])]` or something so the right hand function is a cleanup on finish?",2018-08-21 00:28:10,suggestion,1,10
7111,"wouldn't that suggest we should take the least power, not most power? For instance, if you have a session, you can make a SparkMode now, but if you have a context you couldn't if I require session.",2018-08-21 00:30:34,response,-1,11
319889,"Yeah for best optimization you'd want to some how gc this thing when the resulting stuff goes away, but how/when to invoke oncleanup seems hard to know it won't be referenced again",2018-08-21 01:40:22,suggestion,0,7
319889,"Well except it would mean users need to thread both through, a bunch of API's say for doing I/O will want a session. So using any of the datasource v2 api's or to write out via a dataset. I think the view is normally that SparkSession is the one you hand ",2018-08-21 01:42:55,response,1,9
7111,"okay, can I make this change in a follow up PR? I didn't know that it was better to require SparkSession.

Also, I guess it is better since you can use sql first to produce smarter sources, which I think needs the Session.

Can I merge this and follow",2018-08-21 04:12:30,response,1,9
319889,"Yep on all fronts -- I think you'll get into the DatasourceV2 stuff to do custom stuff before long.

but totally do in a follow up, its all alpha anyway! :) ",2018-08-21 05:47:52,response,3,9
2558984,"hello,

was this merge? i don't see it on 18.1.0 nor on develop",2018-02-20 23:38:35,response,-3,13
64314,"seems good, especially about avoiding the reverse dns lookup.

i'll see about getting this merged.",2018-03-27 04:34:57,response,2,13
132262,"s/,and/, and",2018-06-01 19:08:03,suggestion,-1,1
7605529,Let's keep this Status subtitle.,2018-06-02 00:37:11,suggestion,0,2
150462,"@yufangong sure, will do.",2018-06-07 13:09:05,response,0,13
7605529,Please add another new line to be consistent with other subtitles.,2018-06-12 05:46:33,suggestion,1,1
64314,same here for scaladoc and naming.,2018-05-08 02:57:46,suggestion,-1,2
64314,"perhaps a similar comment here on naming, but i defer to @ryanoneill ",2018-05-08 02:53:34,suggestion,-1,2
64314,style nit: please revert lining up of the `=>`s (here and below),2018-05-08 02:55:29,suggestion,-2,-1
64314,"i think the naming pattern in this file would make this method be called ""keyManagerFactory`.",2018-05-08 02:50:07,suggestion,-1,2
64314,same sentiment here on the name,2018-05-08 02:55:05,suggestion,-1,2
64314,"how hard is this? 

i defer to @ryanoneill ",2018-05-08 02:59:06,response,-1,13
64314,how can we answer this?,2018-05-08 02:58:13,response,-1,13
64314,lets fill this comment in.,2018-05-08 02:53:51,suggestion,-1,3
149050,Calling this class `KeyManagerFactory` as well makes it clash with the argument type. I'm ambivalent in overriding names like that especially when making it usable from Java which does not have import renaming.,2018-05-08 03:48:13,response,0,2
35556,Remove blank line.,2018-05-08 04:51:53,suggestion,-2,1
35556,+1,2018-05-08 04:44:17,response,0,13
35556,KeyManagerFactory,2018-05-08 05:14:47,suggestion,0,1
35556,Remove blank line.,2018-05-08 04:48:39,suggestion,-2,1
35556,It's a good question. This was written before native engines supported TrustManagerFactor[ies]. Part of the comment is now wrong.,2018-05-08 04:50:39,feedback,-2,3
35556,"I'm not sure how many certs are generally in a KeyManagerFactory when it's used. I'm on the fence about whether it's worth adding.

My understanding is that you would need to do the following:
1. Create a `KeyManager` from the `KeyManagerFactory`. kmf.",2018-05-08 05:13:30,suggestion,-1,11
35556,How about leaving this comment as 'TrustCredentials.Unspecified does not change the builder.',2018-05-08 04:59:26,suggestion,-1,3
35556,Remove blank line.,2018-05-08 04:45:10,suggestion,-2,1
35556,"I think we'll want to eventually change this, but it shouldn't need to happen in the same review.",2018-05-08 05:00:07,suggestion,-1,13
35556,TrustManagerFactory,2018-05-08 04:52:07,suggestion,-2,1
35556,+1,2018-05-08 04:44:51,response,0,13
35556,Please sort the imports.,2018-05-08 04:43:10,suggestion,-1,1
35556,Same. Remove extra blank line above the scaladoc definition.,2018-05-08 04:49:12,suggestion,-2,1
35556,+1,2018-05-08 04:48:28,response,0,13
35556,Please sort imports.,2018-05-08 04:44:41,suggestion,-1,1
35556,Can you separate this out into a separate TrustManagerFactory test?,2018-05-08 05:15:30,suggestion,-2,8
35556,getTrustManagers and checkTrustCredentialsNotSupported seem to be missing necessary changes.,2018-05-08 05:22:32,feedback,2,10
35556,Can you add a test for this to SslConfigurationsTest?,2018-05-08 05:20:15,suggestion,-2,12
35556,Remove blank line.,2018-05-08 05:16:15,suggestion,-2,1
35556,Remove,2018-05-08 05:16:38,suggestion,-2,1
35556,KeyManagerFactory,2018-05-08 05:15:58,suggestion,0,1
35556,"Considering that there are already specific Java compatibility classes (*Config.java), is it still an issue to name it `KeyCredentials.KeyManagerFactory`?",2018-05-08 04:47:57,feedback,1,2
149050,Done,2018-05-08 15:08:55,response,0,13
149050,I have not added the test. Depending on how the KeyManagerFactory is constructed the check is already performed there.,2018-05-08 22:13:27,response,0,11
35556,Please undo the spacing change.,2018-05-11 04:03:14,suggestion,-1,1
35556,Please update to the renamed version.,2018-05-11 04:00:16,suggestion,-1,2
35556,Please undo the spacing change here.,2018-05-11 04:01:42,suggestion,-1,1
35556,Thanks,2018-05-11 04:00:44,response,2,13
35556,"Can you add a note to the comments for this method that indicates that unlike Cert/Key Cert/Key/Chain, that using KeyManagerFactory does not ensure that the certificates contained within the KeyManagerFactory are not expired.",2018-05-11 04:07:21,suggestion,-2,3
35556,Remove the '@see' line.,2018-05-11 03:59:00,suggestion,-2,7
35556,Please move the '=>' back near the closing parenthesis.,2018-05-11 04:02:55,suggestion,-1,1
35556,Please move the '=>' back near the closing parenthesis.,2018-05-11 04:03:30,suggestion,-1,1
35556,"Can you add a note to the comments for this method that indicates that unlike Cert/Key Cert/Key/Chain, that using KeyManagerFactory does not ensure that the certificates contained within the KeyManagerFactory are not expired.",2018-05-11 04:07:33,suggestion,-2,3
35556,Remove. I think it's ok to not do this.,2018-05-11 04:04:42,suggestion,0,1
149050,Okay. Why don't we use `@see`?,2018-05-12 01:26:43,response,-2,2
35556,"TBH, I'm not sure which is better, but I'd prefer it to be consistent for now.",2018-05-12 01:32:44,response,0,1
193897,"even though finagle-netty3 isn't going to be around much longer, we should mention that this option is netty4 specific",2018-08-16 23:23:24,response,0,9
428674,okay will do!,2018-08-16 23:33:43,response,0,13
193897,"does SO_REUSEPORT make sense on the client side?

the ci logs (https://travis-ci.org/twitter/finagle/jobs/416903070) show a lot of instances of

`WARNING: Unknown channel option 'io.netty.channel.unix.UnixChannelOption#SO_REUSEPORT' for channel '[id: ",2018-08-17 00:31:05,response,-1,3
428674,"agree, it should be removed",2018-08-21 00:12:50,suggestion,0,13
428674,@dschobel do you want me to just ignore the presence of this setting in `ConnectionBuilder`? ,2018-08-21 00:25:58,response,-1,11
428674,"Actually, along the same lines, would it be preferable if I only add the option if `nativeEpoll.enabled` is true? ",2018-08-21 00:29:22,suggestion,1,11
193897,both sound like the right call to me.,2018-08-21 01:35:43,response,5,13
132262,It's usually pretty unusual and baseDtab changes this late in the game.  how about we keep `baseDtab` a field until someone needs it?,2018-09-02 18:10:18,suggestion,1,6
72999,Maybe keep using a single `StorageUnit` parameter and set it to `min` between the two on the call-site?,2018-10-24 00:18:33,suggestion,1,10
72999,"What about the client side? Here is how it looks today:

```
// 8 KB is the size of the maxChunkSize parameter used in netty3,
       // which is where it stops attempting to aggregate messages that lack
       // a 'Transfer-Encoding: chunked' heade",2018-10-24 00:17:08,response,2,10
72999,"Thinking about this more, it seems we shouldn't probably use the `maxRequestSize` here at all and just introduce a separate parameter for it instead.

I like @luciferous' suggestion. And I would go with `minChunkSize` as a parameter name.

```
Http.s",2018-10-24 00:22:46,suggestion,0,10
921650,"I agree. I'm reworking this code right now and came to the same conclusion.

Initially I wasn't sure, if we can set maxContentLength to 0 and still retain all the features.
Now I looked carefully in the code, and it seems, that the only case when we re",2018-10-24 00:35:34,response,3,10
921650,"I had no intention to implement client side, but I'm open doing this if you think we need that. I do not know, however, what is the behavior right now, and what it should be. Would need to investigate.

`minChunkSize` is a bit confusing for me.
In gene",2018-10-24 00:43:28,response,-1,6
198588,"Let's go with `minChunkSize` for now, if we think of something better during the review we can always change it.",2018-10-24 00:47:03,suggestion,1,3
72999,"I think we should change the client-side too as, otherwise, `Http.client.withStreaming(true, 128.kb)` would mean the `minChunkSize` is silently ignored.",2018-10-24 00:50:50,suggestion,1,6
921650,"I implemented your suggestions on the server-side (had to force push — I noticed that my feature branch been branched from the master).

I need some time to figure out how exactly the client-side should be changed.",2018-10-24 01:32:50,response,0,10
921650,"@vkostyukov , just to clarify.

It seems that in your last message you assume that we already did changes to API but did not modify pipeline creation code.

While in fact I didn't change the API. Signature of the`Http.client.withStreaming` is the same",2018-10-24 01:57:16,response,-1,10
72999,"Oh you're right. I miss-remembered that `withStreaming`  configuration API is shared between client and server. I think that's fine then. It's ok not to be symmetric there (looks like we never were).

Perhaps wait for more people to chime in w.r.t. clie",2018-10-24 02:08:26,response,3,6
198588,"Given a client `Http.client.withStreaming(true, minChunkSize = 128.kilobytes)`, what does it do when it receives a response from the server with `Content-Length: 512KB`?

Does it mean that given `loop`,

```
def loop: Future[Unit] =
  response.reade",2018-10-24 02:19:01,response,0,5
921650,"@luciferous, I don't know the answer, but I'll reply just because I want to understand this too and I hope someone will correct me if I'm wrong.

First of all, I don't think there's `flatMap` method on `Reader`, you likely missed the call to `read` in y",2018-10-24 03:02:07,response,2,13
72999,"It seems to me what no matter how we name it, there is still some buffering happens (at least today) for messages with known `Content-Length`. We can surely document what `minChunkSize` applies to. I'd imagine, setting `minChunkSize = 0` would effectively",2018-10-24 03:13:21,feedback,2,3
198588,"> First of all, I don't think there's flatMap method on Reader, you likely missed the call to read in you code.

@edio Yes, that correct, sorry for any confusion.

> IDK if my understanding is correct, but this is exactly my concern with the name minC",2018-10-24 03:31:21,response,-1,10
921650,"@vkostyukov, buffering indeed may happen, but not in `FixedLengthMessageAggregator`.
Aggregator's buffering is all-or-nothing: we either buffer all message into a huge buffer up to `maxContentLength` or we bypass the aggregator, and emit chunks of data a",2018-10-24 03:33:23,response,1,7
72999,"Okay, I'm convinced. Sorry for the confusion, I think I mis-understood what `FixedLengthMessageAggregator` does. `bufferSize` seems reasonable but, still, could be interpreted as ""buffer my chunks pls"".

Perhaps something as verbose as `aggregateIfLessT",2018-10-24 03:46:47,response,2,7
198588,I don't have any better ideas. `aggregateIfLessThan` works for me.,2018-10-24 03:55:18,response,2,7
921650,"@luciferous 
small clarification
> `bufferSize = 128.kilobytes`: buffer up to 128.kilobytes; `Reader.read` will ALWAYS return `buf` where `buf.length <= 128.kilobytes`

if 
* bufferSizez is very small. For example `bufferSize == 100.bytes`
* request",2018-10-24 03:56:45,response,0,5
198588,"OK, I'm not sure I follow, but hopefully some test/docs will clarify. I'll think about it more too.",2018-10-24 04:03:23,response,1,12
921650,"@luciferous , here's my attempt to explain this class. Please let me know if this makes any sense.",2018-10-24 04:23:56,response,3,11
72999,What's the difference between HTTP chunk and chunk? What's so special about HTTP chunk besides being an N bytes?,2018-10-24 05:01:23,response,-1,3
72999,"I think this could be improved. Perhaps:

""The `maxContentLength` determines when to aggregate chunks and when to bypass the message as is. Only sufficiently small messages (smaller than `maxContentLength`) are aggregated.""",2018-10-24 05:08:45,suggestion,2,3
921650,"I'm not sure, that exactly ""http chunk"" phrase is defined anywhere, but at least what I mean by chunk in the context of HTTP chunked encoding is a part of http message body, enclosed in `<content length>\r\n` and `\r\n` as specified by chunked encoding fo",2018-10-24 06:51:18,response,0,3
72999,"I understand your reasoning now, thanks for taking time to explain!

Maybe ""not to be confused with chunks as in `Transfer-Encoding: chunked`"" would make this easier to grok?",2018-10-24 07:22:34,response,3,3
72999,"One interesting thing is, from what I read, Netty never really cares how chunks are formatted on the wire (think HEX prefix w/ a chunk size) and [just shoves whatever is available (think part of an actual chunk) into the pipeline](https://github.com/netty",2018-10-24 07:41:37,response,1,11
921650,"That's an interesting find! I didn't know that. Thanks

Maybe for someone who's more familiar with netty than me, the meaning of _chunk_ is clear and I'm just trying to workaround my ignorance here :smile: ",2018-10-24 07:45:26,response,4,3
72999,"As we have little to no control over how Netty decodes HTTP streams, we usually just refer to a chunk (HTTP chunk to be precise) as whatever Netty gives us in `HttpContent`.

Also, I appreciate your patience with this. I'm really excited about this PR!",2018-10-24 08:14:29,response,3,11
72999,"@bryce-anderson and I are talked about this. It seems like we need to keep `maxRequestSize` in place as it's also get passed to a supper class, `FinagleHttpObjectAggregator`, which in turn, takes care about handling oversized messages (think HTTP 413). Ch",2018-10-25 01:18:50,response,1,3
72999,Let's make it a separate method. Java doesn't understand default arguments.,2018-10-25 01:26:05,suggestion,2,10
921650,"I may be missing something, but I think, we do not need new parameter.

If message is bigger than `aggregateIfLessThen`, then there's nothing to aggregate. Messages fully bypass this handler.

Your concern would be valid if we used `FinagleHttpObjectA",2018-10-25 01:28:29,feedback,2,10
72999,"Oh the `shouldAggregate` check. Yeah, I think you're right.

Maybe it's worth mentioning in the scaladoc for `withStreaming` method that `aggregateIfLessThan` could be replaced with `maxRequestSize` if the later is smaller.

Also, what do you think ab",2018-10-25 01:44:03,response,3,10
921650,"> Maybe it's worth mentioning in the scaladoc for withStreaming method that aggregateIfLessThan could be replaced with maxRequestSize if the later is smaller.

Sorry, I'm not sure I follow.
To my understanding, `maxRequestSize` limits request size and ",2018-10-25 02:29:35,suggestion,-2,10
921650,"> We can't omit the handler completely if maxContentLength == 0 because it handles also 2 cases that are not impacted by maxContentLength:

On the other hand, if developer enables streaming, `isChunked == true` should be expected. IDK, honestly. This is",2018-10-25 02:41:21,feedback,-2,10
72999,"Yeah, I'm with you on the understanding front. What I mean is, when users configure `withStreaming(true, 10.mb)` they expect fixed-length messages up to 10mb to be aggregated. Yet, as we take min between max-request-size and aggregate-if-less-than`, we ac",2018-10-25 02:42:46,response,3,9
921650,"Ok, I got it now! Will do the fix a bit later today. Hopefully together with some new e2e tests.",2018-10-25 02:48:17,response,3,13
198588,"Thinking more about this, an 8KB default may be a reasonable default here. What do people think?",2018-10-24 22:44:06,suggestion,1,3
198588,"????

Also what do you think of using `AggregateIfLessThan.aggregateIfLessThan.default` instead of `zero`",2018-10-25 02:03:58,suggestion,-3,11
198588,"I think I prefer if we prioritize `Http.withStreaming` parameters over the `maxRequestSize`, i.e. `maxRequestSize` is ignored when `aggregateIfLessThan > 0`. It changes behavior, but I'm concerned about complicating configuration for the user. To me, this",2018-10-25 02:53:07,suggestion,1,10
72999,I don't think we should ignore it. There is `PayloadSizeFilter` that would reject payloads bigger than a max-size so it doesn't really make sense to aggregate more than that anyway.,2018-10-25 03:01:36,feedback,0,11
72999,"Yes, I like 8kb.",2018-10-25 03:02:20,response,1,3
921650,"I'll take this occasion to offer once again different name for the property. I promise it's the last time I'm raising this :)

`withAggregateIfLessThan`
con: does not suggest in any way, that it is realted to streaming
con: while it is very verbose an",2018-10-25 06:24:19,suggestion,1,2
72999,"I like all of those names but I'm still in the ""we should group this new config with `withStreaming`"" camp. As the new value only takes affect when streaming is enabled, we might want to keep them together (one configuration entry and perhaps one stack pa",2018-10-25 10:11:33,response,1,9
921650,"Ugh, I misunderstood about separating a method.
Apparently you suggested an overloaded version of `withStreaming`...",2018-10-25 10:40:43,response,-2,10
72999,"Oh yeah, sorry I if I wasn't clear. Basically we're trying to ensure our APIs are accessible from Java which, unfortunately, means saying no to default arguments.",2018-10-25 10:52:16,response,3,6
72999,"@luciferous talked about using 8k for a default value here. I liked that at first but maybe we're better off preserving the current ""default"" behavior and using 5.mb as a value?",2018-10-25 12:39:16,suggestion,1,11
72999,Love these docs! Ty!,2018-10-25 12:38:08,response,4,13
198588,Sounds good.,2018-10-26 00:09:13,response,2,13
72999,@edio This thread.,2018-10-26 05:48:55,response,0,9
1350674,"Maybe forward this to the named method:
```suggestion
        .withStreaming(enabled)
```",2018-10-26 09:27:34,suggestion,-1,10
106030,intentional?,2018-01-18 03:31:02,response,-1,3
51152,"Yes: Putting something in the plugin list enables it, so having this here was enabling it twice, which now causes an error.",2018-01-18 03:33:10,feedback,-2,4
106030,"ah, cool",2018-01-18 03:56:39,response,1,13
48823,Sweet! How’d you generate this? Mind replacing the `knjk04` with `twitter`? ????,2018-08-22 22:47:36,suggestion,5,3
12036460,"I typed this out by hand! Yeah, sure. Sorry, I didn't realise I was getting the links from my for :)

I can look into ways to generate the TOC. It's probably easier for everyone else.",2018-08-22 23:00:05,response,3,3
12036460,Update: I've made the changes you asked for in a different branch. See PR: https://github.com/twitter/commons/pull/467,2018-08-22 23:30:14,response,1,13
7875,"""Finagle's"" (capital F)?",2018-04-03 03:28:11,response,-1,1
7875,"""Dodo"" (capital D)? Maybe link to Github Dodo project?",2018-04-03 03:29:09,response,-1,1
353094,"Can you provide some additional context as to why we are missing dependencies?

Should we officially retire/archive this repo? 
Either via https://help.github.com/articles/archiving-a-github-repository/ or by moving it to https://github.com/twitter-arc",2018-10-23 01:37:59,response,1,3
81530,"The missing dependency is a Twitter-owned gem that was unpublished when no owners stepped up to transition from ruby 1.8.7. 

We could retire this repo if you wish. I didn't want to make that call - the current status is the content lives but the tutori",2018-10-23 03:58:04,suggestion,2,10
81530,"Was that ""Explain to me why dependencies are missing"" or ""amend this commit to explain to the reader why dependencies are missing""?",2018-10-23 05:54:01,response,0,3
64314,"i think we should handle the failed `Future` case, otherwise the `System.exit` won't get called. also, i think something like:

`Await.result(close().unit, closeDeadline - Time.now)`",2018-01-17 01:13:59,suggestion,-1,4
1350674,Any reason we shouldn't scope this down to `case NonFatal(_) | _: UnsatisfiedLinkError =>`?,2018-07-10 05:27:47,suggestion,-2,4
37720213,That's a good point. That way we won't let we won't let any other unknown `Fatal` exception cause the return of a `NilJvm`. Thanks!,2018-07-10 06:09:53,response,5,4
35556,nit: use `log.warning` instead of `log.log`,2018-07-10 07:08:09,suggestion,-2,1
37720213,Thanks for the suggestion @ryanoneill!,2018-07-10 23:34:18,response,4,13
447709,"Inlined the deprecated `SynchronizedMap`, and also brought along this ominous todo from the 2.12.x source. ",2018-08-06 17:06:51,response,-1,3
447709,"You can either have no deprecation warnings, or know you handled all cases individually at compile time, but unfortunately not both.",2018-08-06 17:08:38,response,-3,4
447709,"Deprecated trait copy-pasted in, including ominous todo.",2018-08-06 18:52:10,response,0,11
132262,"I don't *love love* this because of the intermediate object, but we do shave the ArrayList alloc, which is pretty good.  can you add a TODO to change to `collectionAsScalaIterable` when we drop support for 2.11.x?",2018-08-30 04:37:10,response,-2,10
132262,ditto,2018-08-30 04:38:40,response,0,13
132262,"again, TODO to make this better after we drop 2.11.x?",2018-08-30 04:37:54,response,0,9
132262,ffti (feel free to ignore): `new CancellableSink({ count += 1 })`,2018-08-30 04:40:34,suggestion,2,10
132262,ditto,2018-08-30 04:38:53,response,0,13
447709,"Initially, I mainly tried to make this work with the smallest change possible. Thinking about this more, iterating the java collection right into the spool without any converters might be a better strategy.

If I try to do that, I'm going to struggle a ",2018-08-30 16:55:11,response,0,10
447709,"alternatively, WDYT about a `@varargs` annotation on on Closables#all? From what I understand, that would make it callable with the closables array without further ado.",2018-08-30 17:24:36,response,0,10
132262,"yah, take a stab at it.  java is basically a subset of scala.",2018-09-06 01:47:35,response,2,13
132262,"if it compiles, that works for me.",2018-09-06 01:48:54,response,1,13
1114008,was it necessary to do this due to one of the deprecation warnings?,2018-09-14 05:53:33,response,-1,4
1114008,"is the TODO still relevant to us? meaning, is it something that _someone_ will do _someday_ here? Perhaps we can just remove it.",2018-09-14 06:41:00,response,-3,7
447709,"yes, exactly",2018-09-14 14:32:45,response,0,13
447709,"The todo may still be relevant to twitter util -- it would take a bit of investigation to figure out whether that's true or not.

The (unfortunate) case is that that todo has been in the original case for pretty much ever, and the depreciation has to do",2018-09-14 15:05:17,response,-1,7
1114008,"Thanks for the background! For this PR, I don't think implementing a proper synchronized version makes sense.

I don't really have a read on whether or not the extra methods would be useful. If this is indeed a noop, we can leave it as is unless someone",2018-09-15 03:30:00,response,2,10
72999,I'm somewhat skeptical this actually improves readability. Perhaps others might find it more readable.,2018-09-29 01:58:22,feedback,-3,1
11002776,"I agree that it's not drastic improvement, maybe it reads slightly better? I was also thinking of adding comments at the end of certain lines, as below: 

```
larger match {
  case l if (l == 0 || smaller == 0) => Duration.fromNanoseconds(0)          ",2018-09-30 02:36:39,response,1,1
7605529,什么是类型安全？,2018-06-13 03:45:26,,,
7605529,s/根本不是/没有标明是,2018-06-13 02:00:03,,,
7605529,让我们指代更明确一些：但这些返回类型提供了很好的文档,2018-06-13 01:56:52,,,
7605529,s/但避免使用晦涩难懂（尤其是类型系统）的特性/但避免使其晦涩难懂（尤其是类型系统,2018-06-13 01:25:04,,,
7605529,"我认为 production code 在这里指产品代码，
“但这些技术很少应用于产品代码“ 如何？",2018-06-13 01:47:15,,,
7605529,（space)list(space) for consistence.,2018-06-13 01:32:26,suggestion,-2,1
7605529,较长的？,2018-06-13 01:30:20,,,
7605529,Thank you for adding this part.,2018-06-15 07:43:52,response,3,13
7605529,s/引用到当前值/当前值的引用？,2018-06-15 07:47:42,,,
7605529,"Can you add the link here?  `[Finagle](https://github.com/twitter/finagle)`
And I think it intended to say `RPC 框架` here.
",2018-06-15 07:35:51,suggestion,-2,3
7605529,"Second thought, I believe you need to also make this change to GoldService$FinagleService.scala and PlatinumService$FinagleService.scala. Can you run the test to confirm?",2018-06-20 00:30:08,suggestion,-1,12
7111,Let’s not use this m. You can get the zero from the p by case matching.,2018-01-27 00:19:20,suggestion,-3,7
2523602,"This looks great! What do you think about allowing user to pass a `PriorityQueue` instead of just a Queue (AFAIK scala PQ doesnt extend Queue). The way code is written right now, its implying that I need a commutative monoid to guarantee deterministic beh",2018-01-27 01:08:25,suggestion,5,7
2523602,Not sure if its possible to do it in this implementation but it would be nice to generalize how elements are evicted from the window. Right now it seems like I can only do fixed windows but I would really like to do time based rolling windows as well. For,2018-01-27 01:12:04,suggestion,-2,10
7111,"actually, I think `Window[T](total: T, items: Queue[T])` is better. We don't really want people to do something like `Window(100)` do we? that will have no items in the queue, and I imagine break the laws.",2018-01-27 02:47:02,suggestion,-4,11
40888923,"If you look at `items`, it fills in the queue if none was provided, i.e meant for initialization. The intent is to have a simple interface where you can wrap a window around a single object and sum in a sensible way:
```
implicit wm = WindowMonoid(2)
",2018-01-27 03:17:04,response,0,11
40888923,"My thought was to eventually have two classes/monoids, based on whether we want aggregations over fixed items or fixed time.

```
// Monoid defines aggregation for fixed window length, e.g. last 28 elements. Queue fixed to 28.
case class Window[T](tot",2018-01-27 03:35:15,suggestion,0,11
2523602,"That seems reasonable but I am still not sure why we cant use `ProrityQueue` instead of `Queue`? As a user I would like to control the ordering and if I am passing you a PQ, I can do that by specifying my own comparator  ",2018-01-27 03:38:31,suggestion,-1,10
7111,"what about a
```scala
  def fromIterable[T](ts: Iterable[T]): Window[T] = {
    val monT: Monoid[T] = p.join
    val right = ts.toList.takeRight(windowSize)
    val total = monT.sum(right)
    Window(total, Queue.empty[T] ++ right)
  }
```
",2018-01-31 09:58:48,suggestion,-1,10
7111,"can we have a second one:
```scala
forAll { (ts0: List[Int], ts1: List[Int], n: Int) =>
  val expected = Queue((ts0 ::: ts1).takeRight(n): _*)
  val mon = new WindowMonoid(n)
  val got = mon.plus(Window(ts0.sum, Queue(ts0: _*)), Window(ts1.sum, Queue",2018-01-31 09:53:37,suggestion,-2,10
7111,can you make this a scaladoc comment on the case class?,2018-01-31 09:49:57,suggestion,-2,3
7111,"I think you can optimize `sumOption` somewhat here: you can take blocks of data and ignore the left if the right is full. PS: scalding uses this if it exists, so overridding sumOption on Semigroup (or any subclass) can be a very nice performance win on ma",2018-01-31 10:08:28,suggestion,-1,7
7111,can you add more comment to this javaDoc param?,2018-01-31 09:54:15,suggestion,-2,3
40888923,@johnynek: Overwrote sumOption below.,2018-02-01 14:52:22,response,0,13
40888923,Done,2018-02-01 14:52:31,response,0,13
40888923,"@johnynek: I did this, and generalized to `Traversable`.",2018-02-01 14:53:18,response,0,11
7111,.empty is more efficient since you avoid allocating the varargs wrapper.,2018-02-01 15:04:29,suggestion,-2,7
7111,Using fromTraversable here is ignoring that you already have a queue. I think summing the queue and reusing it will be a significant performance improvement ,2018-02-01 15:06:03,suggestion,-1,7
7111,Can we use Iterable? Scala 2.13 is changing the collections to avoid Traversable: https://www.scala-lang.org/blog/2017/02/28/collections-rework.html#traversable-and-iterable,2018-02-01 15:07:59,suggestion,-2,9
7111,for performance (not calling fold on each plus call) we are probably better to have two subclasses of `WindowMonoid` which could be an abstract class. We can decide once when we allocate which path to choose. Then the jit should be able to inline both ins,2018-02-05 05:02:36,suggestion,-1,11
7111,can we make this a `val` so we don't have to do the computation and allocation again on each call?,2018-02-05 04:59:58,suggestion,-2,1
7111,Same comments as above.,2018-02-14 00:38:07,suggestion,-2,11
7111,"Can you also test this for a custom type that does not have a special instance defined?

Also, scala has .max on Iterable. Can we just use that rather than sorted.last?",2018-02-14 00:37:49,suggestion,-2,11
1233114,Done.,2018-02-14 03:25:09,response,0,13
17013,"It's probably possible to geek out on this even further, but this looks good to me for now.",2018-02-23 00:36:54,response,3,13
7111,can you put this on the companion object? that should preserve binary compatibility and we can release it in the 0.13 branch.,2018-03-01 05:08:11,suggestion,-2,9
7111,"if you implement this as a private method on the companion that matches the case class we have, I think we can make this binary compatible.

```scala
private def buildArrayMulti[H](h: MinHasher[H], hasherbuffers: Seq[Array[Byte]])(fn: Seq[H] => H): Arr",2018-03-01 05:11:12,suggestion,-1,9
9172187,"Thanks for reviewing.  Actually, buildArrayMulti is an abstract method called by  calls other buildArray virtual method.  If I move it to companion object, I'll have to move all of them to companion object.  Does it make sense to extend MinHasher32 and im",2018-03-02 01:04:43,response,3,11
35946362,Nitpick: there are [two ways](https://github.com/milessabin/shapeless/issues/233) to spell the h-word but this isn't one of them. ???? ,2018-05-12 03:44:55,suggestion,-3,2
35946362,"I know (from experience) that people are going to complain about the following not doing what you might expect:
```scala
import com.twitter.algebird._
import shapeless._
```

I'd probably call the package `generic` or `derivation` to avoid the whole",2018-05-12 03:47:34,suggestion,-1,2
35946362,Isn't it usually the tail where you need to worry about the divergence checker?,2018-05-12 03:40:07,suggestion,-2,5
35946362,"I find the following little confusing. Given:

```scala
import com.twitter.algebird.Monoid
import shapeless.{ ::, HNil }

abstract class Base { def x: Int }
case class Foo(x: Int) extends Base
object Base {
  implicit val baseMonoid: Monoid[Base]",2018-05-12 04:07:56,response,-1,1
7111,"yeah, not really sure that is needed at all... probably insufficiently reviewed internally.

Should we add the Lazy if it is not needed? I really don't know when it is (e.g. it must not be here, since we are not using it on the tail).",2018-05-12 04:12:39,suggestion,-5,7
35946362,@oscar I think this might be causing the failures on 2.10? Checking now…,2018-05-12 04:13:01,response,0,4
7111,"how did you even discover that?

I'll add a test and try to fix it.",2018-05-12 04:13:16,response,1,4
7111,"yeah, I hit this myself. Generic would be consistent with circe, right? derivation is your custom macros, right?",2018-05-12 04:13:47,response,-1,11
35946362,"Yeah, `generic` would be consistent with circe, and I think it'd have my vote.",2018-05-12 04:19:48,response,1,11
35946362,"Hmm, swapping the `Lazy` from heads to tails everywhere doesn't fix 2.10. Taking a look now.,",2018-05-12 04:28:09,response,0,4
35946362,Removing the `Lazy` altogether makes at least the `Semigroup` one compile. My guess is some lingering version of [this bug](https://github.com/milessabin/shapeless/issues/367)—I can try to minimize this weekend and open a Shapeless issue.,2018-05-12 04:41:44,response,0,9
7111,"@ianoc can you double check this? This triggered a warning in scalac (which we ignored), but it looks like we intended to increment the count, but lost the `v`. What do you think?

I guess this means this cache was always pruning...",2018-05-15 09:26:52,feedback,-1,9
32164772,"ouch, yeah this change looks right/looks like a bug. ",2018-05-15 09:29:08,response,-1,4
2523602,"Not sure about all the `HList` stuff but this seems like a combinator on `ApplicativeAggregators`. I would think that if I have:

```scala
val a: MonoidAggregator[Animal, ColorStats, Result] = ...
val b: MonoidAggregator[Animal, ShapeStats, Result]= .",2018-05-15 11:40:28,suggestion,-1,11
2523602,"Same comment as above, why cant be implement this as a combinator using ApplicativeAggregators?",2018-05-15 11:42:06,suggestion,-2,11
7111,minor nit: `val builder`?,2018-08-03 04:31:31,response,-2,1
7111,"can you add all new items at the end of the list? Otherwise, I think we could change the tokens and some people have (ill-advisedly) persisted kryo data into long term storage.",2018-02-01 04:01:18,suggestion,-2,10
7111,"so this test protects the future, but not people in the past right? They all get broken right?

Could we work around that? Maybe add a new registrar that people can opt in to adding?",2018-02-01 04:05:36,suggestion,-3,12
32861838,yes... I will follow your next proposal and put all new items into a separate registrar.,2018-02-01 22:47:30,response,0,10
32861838,"Right, this would break compatibility for projects that have already used chill for long term storage. Defining a separate registrar is OK for me (although the order of entries in the registrar will be less orderly that way).

I'm thinking along these l",2018-02-01 22:53:38,suggestion,2,9
7111,I think we should use `TraversableSerializer` here. I think `.forConcreteTraversableClass` will do the job.,2018-08-28 00:41:39,suggestion,0,11
221390,"You may want to remove the ""depending on browser"" part from the method comments.",2018-01-20 17:30:33,suggestion,-2,3
97583,Since we are now validating the config before we generate headers we need to use a legit value for `plugin_types`. ,2018-01-23 03:04:58,feedback,0,10
97583,The linter told me that a few locations needed a small style update. ,2018-01-23 02:59:58,suggestion,0,1
97583,"I kept `Configuration.get`..but it now only ever returns the global configuration. I'm guessing almost nobody was calling `Configuration.get`, so we could rename this to something like `Configuration.default_config` or something if you like. ",2018-01-23 02:51:42,suggestion,-1,10
97583,"@oreoshake - I know we had chatted about the expectations of `merge`. But, given that `merge!` was overwriting existing values, it seems like `merge` should to the same (or `merge!` should do the opposite). It seems like `append` should be used for any ki",2018-01-23 03:02:00,response,0,13
97583,"In the spirit of ""cache less"" , I just made `hpkp_report_host` a dynamic method invocation. Plus, it was the only attribute that didn't have some config class backing it..so it made defining our attributes cleaner :smile:. ",2018-01-23 02:53:55,response,1,1
97583,"As of https://github.com/twitter/secureheaders/pull/383/files#diff-5b9420dafe46fa9c6c8ac3415ab06102R91 I realized we no longer really ever had a need to look at this value. Plus, it feels like `CONFIG_KEY` is something that the config object should know a",2018-01-23 02:58:42,response,-1,7
97583,"We were only validating the config during the initial `Configuration.defautl { ...  }`. But, we never did any checks when an override is applied. So, before we actually send out the header, we validate again. ",2018-01-23 02:48:50,response,0,12
97583,"`target` didn't seem to be used so I removed it. Plus, whatever the intent with ""target"", we probably couldn't support it anyway (i.e. same issue as named overrides). ",2018-01-23 02:52:39,response,0,7
97583,"Since all the caching and stuff has been removed I needed up moving some of the ""make me a header"" logic down into the actual `Configuration` object. So, these classes are defined in https://github.com/twitter/secureheaders/pull/383/files#diff-5b9420dafe4",2018-01-23 02:47:46,response,0,5
97583,Yay for killing off this `update_cached_csp` business ???? ,2018-01-23 02:50:12,response,-5,10
97583,"I was originally doing all this overrides stuff inside the main `secure_headers.rb`. But, most of the code in that class assumes a `request` object. But, we might want to apply an override to a config outside of that context. For example, at GitHub, we ha",2018-01-23 02:55:53,suggestion,0,10
97583,This test exercises the bug in https://github.com/twitter/secureheaders/issues/380. ,2018-01-23 03:04:31,response,0,12
97583,"I'm now validating `report_only` inside the actual config object. So, we can't go setting `report_only: true` unless we are going to be validating it with a `ContentSecurityPolicyReportOnlyConfig`. ",2018-01-23 03:03:49,response,0,11
97583,"As of https://github.com/twitter/secureheaders/pull/383/files#diff-5b9420dafe46fa9c6c8ac3415ab06102R186 I made the `make_header` logic super general. So, I adjusted al the classes to support the same interface. ",2018-01-23 02:59:37,response,0,11
97583,The configuration now references some of the individual header objects..so it had to move. ,2018-01-23 02:44:36,response,-1,5
97583,I made the `generate_headers` ignorant to HTTPS. We could send additional data into `make_headers` to let be smart about HTTPS. ,2018-01-23 02:49:52,response,0,10
92540,:+1: to renaming it,2018-01-26 03:46:50,suggestion,0,2
92540,"???? ""headerable""",2018-01-26 03:54:31,response,-3,1
92540,"What do you think about removing this ""could be an object, could be a hash"" support? ",2018-01-26 03:56:55,response,-1,11
92540,why is user_agent required here but optional elsewhere?,2018-01-26 04:02:16,response,-2,3
92540,I think we should move as far away from treating this like a hash as possible. Using verbs like append/combine/overwrite would be clearer. But we'll have to alias and deprecate first.,2018-01-26 04:00:39,suggestion,-1,2
92540,"That was somewhat intentional, for ""performance"" reasons. A goal was to make it hard to do the wrong thing at runtime. But I'm fine with this too.",2018-01-26 03:50:51,response,-1,13
92540,:+1:,2018-01-26 03:52:00,response,0,13
92540,Should we raise an exception if one of these is `nil`? That would be a clear indicator of a bug but I don't want to bring someone's site down because of it. ,2018-01-26 03:59:13,suggestion,0,12
97583,"no good reason..only because we always pass it when it is used. But, for consistency it would be fine...eventually this is passed to a method that has a `user_agent = OTHER` default value. I'll make it match the others. ",2018-01-31 00:13:37,response,0,10
97583,Maybe I should have it (and the others) match the `user_agent = OTHER` pattern though.,2018-01-31 00:14:20,suggestion,0,10
97583,"Meh..I think choosing one or the other feels awkward in different places. For example, during initial config it feels really natural to do:

``` ruby
Configuration.configure do |config|
  config.csp = {
    default_src: %w(https: 'self')
  }
end
`",2018-01-31 01:40:59,suggestion,-3,10
97583,We call this in more tests now that it is an exception to reconfigure the default configuration. ,2018-01-31 02:36:24,response,0,12
97583,"This private class method makes tests uglier, but it seems worthwhile to preserve hiding the actual default config from public callers. ",2018-01-31 02:34:16,response,1,6
97583,Since we are defaulting `user_agent` to `nil` in various places I thought it made sense to also override `user_agent` if `nil` ends up being passed. ,2018-01-31 02:35:13,suggestion,0,10
97583,It isn't enough to `nil` out the default config anymore since we are checking `defined?(@default_config)` when we throw an `AlreadyConfiguredError`.,2018-01-31 02:39:36,response,-2,4
97583,"Yup..this makes a handful of tests uglier, but I don't like making private internal data more visible simply for the sake of tests. ",2018-01-31 02:37:50,response,-1,6
97583,"In the spirit of preserving the integrity of the default config I added this. It is my assumption that a caller should only ever being calling this configuration block a single time, correct? If it is called more than once it implies that we could be runn",2018-01-31 02:33:33,suggestion,0,10
97583,For groups of tests that want to play with the default configuration we need to reset it so we don't get an `AlreadyConfiguredError`,2018-01-31 02:37:13,feedback,-1,12
92540,"> It is my assumption that a caller should only ever being calling this configuration block a single time, correct?

There were guards in place to prevent doing exactly that. Not sure if they survived the change.",2018-01-31 04:23:14,suggestion,-2,10
97583,"But don't the tests do a bunch of `Configuration.default {...}` between tests? That implies it was ok to reconfigure the default config a bunch of times, no? ",2018-01-31 04:26:46,response,-2,12
169974,Was this intended to be committed?,2018-02-13 06:07:43,response,-1,13
169974,nice!,2018-02-13 06:08:01,response,6,13
92540,"Yep, it's pretty useful for anyone using `guard`. Didn't feel the need for a separate PR",2018-02-13 06:21:37,response,2,13
169974,???? ,2018-02-13 06:22:15,response,-3,13
169974,:tada:,2018-04-12 06:27:05,response,2,13
169974,Do you want to rewrap this line?,2018-04-12 06:28:08,suggestion,1,1
92540,"Heh, I should probably take a pass over all of the comments. I'm sure there's plenty of outdated info.",2018-04-12 06:47:04,response,2,3
92540,Removing the `user_agent` argument is a breaking change that will require a deprecation release.,2018-04-12 06:47:47,feedback,-1,4
134219,I think generic `memoize(StateWithError)` is simpler to understand.,2018-02-09 17:41:44,suggestion,-3,1
134219,Can we put `PipeFactor[T]` back here? ,2018-02-09 17:18:40,suggestion,-3,11
134219,This function doesn't memoize failures?,2018-02-09 17:43:43,response,-3,10
134219,Can be removed,2018-02-09 17:47:46,suggestion,-1,7
134219,Is `memoizePlan(pf).map { ... as before ... }` has different semantic with this code?,2018-02-09 17:47:27,response,-3,10
7111,It was needlessly constraining the type. This works for any T. `PipeFactory[T] == PlannerOutput[FlowProducer[TimedPipe[T]]]` so I didn't want to limit it.,2018-02-10 02:04:38,response,-2,10
7111,it does not memoize failures.,2018-02-10 02:05:11,response,-1,10
7111,"Previously, we didn't memoize the state computation, just the reader inside. The semantics are the same, but this removes an exponential blowup on graphs that merge back into themselves repeatedly (similar to the problem with a naive implementation of fib",2018-02-10 02:06:44,response,0,10
134219,"Makes sense, looks better this way.",2018-02-10 02:16:32,response,5,13
134219,"Oh, I see. Basically you do `memoizeReader(Reader[I, O]) -> Reader[I, O]`. Then I prefer to have it extracted and then what you want is `memoizeState(pf).map(memoizeReader)`.",2018-02-10 02:19:11,response,-1,10
280540,Curiosity: why create a new class instead of isolating captured values using local `val`s?,2018-03-01 04:51:55,suggestion,-2,11
280540,is this just a refactoring or does it fix serialization issues as well?,2018-03-01 04:54:54,response,-1,8
7111,"just to be 100% clear about what is captured. a side benefit is that is has a good equality, but I doubt that will come into play.

I was surprised to see what was captured here because you have 3 nested layers of closure.",2018-03-01 04:55:15,response,1,11
7111,"it does! see how tricky it is! without this change, you serialize the whole store to get flatOpt, when really we don't need to grab that function for two simple use cases. Not even sure there is no flatten on Option still in scala, but in any case, flatte",2018-03-01 04:57:08,response,3,11
280540,???? thanks for the clarification. I think we could do better regarding capturing. We could do something at runtime like Spark does or even try to inspect the function using a macro to detect captured values that aren't serializable.,2018-03-01 04:57:42,suggestion,3,11
7111,"given that lightbend are trying to remove macros, or at least drastically narrow the scope, I'm a little worried about being too macro reliant. Note that scalacenter's spores are not even available on 2.12 due to issues with macro interaction with a new v",2018-03-01 04:59:47,response,-1,11
1925,Add return type.,2018-05-07 02:40:24,suggestion,-2,10
1925,Should these vars be ```private[this]```?,2018-05-07 02:52:21,suggestion,-1,6
1925,Why do we need both retryPolicy and policy here? Policy could also be null here which could give you a Some(null).,2018-05-07 02:48:49,suggestion,-2,3
1925,This policy is masking the ```var policy``` instance variable.,2018-05-07 02:51:30,response,-1,6
1925,Add newline.,2018-05-07 02:54:33,suggestion,-2,1
622449,not re-using these could have a performance impact -- is it not possible to keep reusing them? ,2018-03-29 06:29:54,suggestion,-2,8
4417759,"So AFAIK, for every incoming payload we create new ThriftBinaryDeserializer object (from core/src/main/java/com/twitter/elephantbird/mapreduce/io/ThriftConverter.java).
Hence I thought it would be okay to initialize these objects here.

Also, we need t",2018-03-29 06:40:08,response,-1,11
622449,"sounds good to me, thanks",2018-03-29 06:48:45,response,2,13
622449,"Actually, that doesn't seem to be true. It caches the instance and doesn't create a new one each time fromBytes is called.
I think we should be aware of the cost of this change. Another option is to just set a hard (fixed) limit instead of using bytes.le",2018-03-29 06:54:42,response,-2,11
622449,"we just spoke offline, seems like either of:

1) Set a hard limit (configurable via hadoop config)
or
2) Start with a reasonable limit, cache the TBinaryProtocol instance, only instantiate a new one when `bytes.length` is larger than this limit (you c",2018-03-29 07:17:02,suggestion,-1,11
550921,upconvert len to long before comparing to be clear here.,2018-03-29 08:23:24,suggestion,-2,10
4417759,"int will be upcasted to long. So we are good here.

I've changed the adjustment factor. It is now incoming len + 10% (incoming len). That way we are not blindly doubling it.",2018-03-29 12:17:35,response,1,10
43531,Thanks for this -- I am thinking I might want to make this the designated initializer (and also make a few other tweaks). I'll merge this (so you get credit!) but will be making some other minor updates soon as well.,2018-01-13 08:17:33,response,2,13
5117111,I think we want to check for the prefix only at the beginning of the string. I think substring works fine for this use case. Any other concerns?,2018-01-26 11:55:41,suggestion,0,12
185779,@kaushlakers substring works fine here too. I see you pushed a stand-alone version for 2.0.3. I'll give that a try and let you know.,2018-01-26 21:29:15,response,2,13
185779,@kaushlakers 2.0.3 of the library does not exist in the tag 2.0.3,2018-01-26 22:31:13,response,-1,9
2219171,"Rather than create an XmlLifter here and adding a dependency on org.json4s, please use the existing jsoup dependency and use HtmlLifter to also lift xml.",2018-04-09 12:40:19,suggestion,-2,9
2219171,These requirements are independent of SSL and are generally useful. Please use these settings in a shared trait between Http and Https. Bonus points for adding this support at a lower finagle layer so that it may be directly configured in DifferenceProxy ,2018-04-09 12:47:35,suggestion,-2,9
47822,"oh, i see the rest is formatted this way. idk i think that's a little goofy looking, but whatever, just follow the convention and ignore me :)",2018-07-25 01:39:43,response,-3,1
47822,"I'd cut down each method call here and fold the map_or into one line like:

```rust
parameter
    .get(""num"")
    .and_then(|k| k.as_integer())
    .map_or(0, |i| i as u64)
```",2018-07-25 01:38:20,suggestion,-1,1
47822,"I found this a little confusing. Perhaps we could hint to the user what they should do to fix it? 

```rust
let fmtlen = format!(""{}"", num - 1).len();
if  fmtlen > size {
    format!(""To contain {} strings, you need to specify a size >= {}"", num, fmt",2018-07-25 01:45:53,suggestion,-2,1
47822,"Since this method returns `Result<T>`, we can use the new `?` macro instead of `try!` (which is deprecated now, afaict).

```rust
let mut value = T::parse(seed, size, num, parameter)?;
```",2018-07-25 01:48:19,suggestion,-1,10
6625053,To be addressed in #155,2018-07-25 02:08:35,response,0,13
47822,"I WILL NOT BE SILENCcooh that's fine, thanks!",2018-07-25 02:09:52,response,3,13
6625053,#156 for this one,2018-07-25 02:11:22,response,0,13
2630136,wonder if it would make more sense to express these as a max # of times we double the timeout,2018-08-02 04:52:02,suggestion,-1,3
6625053,"I felt like it might be more natural to think about it in terms of milliseconds still. This also allows us to pick a max timeout that isn't a 2^n multiple of the base timeout. Eg: with 200ms base, you can cap at 500ms timeout. Otherwise it's either 400ms ",2018-08-02 05:03:46,suggestion,-1,7
125662,"Given the new functions, `request_timeout`, `connect_timeout` in Connection class, I feel renaming the options bearing the same name in config would keep things clearer, i.e. `config.request_timeout` -> `config.base_request_timeout`, `config.connect_timeo",2018-08-07 05:01:10,suggestion,-1,2
2630136,would we also want to check for expiry?,2018-09-15 13:54:15,response,1,5
125662,"I guess there're reasons to do either/both.

The only case I can think of where someone wants expired keys to be dumped, is to investigate how much space in cache is occupied by already expired keys. But that is a legitimate question that we have been a",2018-10-27 10:03:08,response,2,11
125662,"Alright, now I'm resuming this PR for actual merge, I'll take your suggestion and bring them to feature parity.",2018-10-27 10:09:30,response,1,10
2630136,"why are we renaming this? I think this name can cause some confusion, since it creates threads for both worker and server threads.",2018-07-12 05:27:21,suggestion,-2,2
2630136,maybe rename these to core_worker_run and core_pubsub_run,2018-07-12 05:53:57,suggestion,-1,2
11239,"It makes more sense to return `parse_rstatus_t` here since both callers are validating the size of the read buffer...

how about something like this?

```c
parse_rstatus_t
token_is_array(struct buf *buf)
{
    ASSERT(buf != NULL)
    if (buf_rsiz",2018-05-04 04:35:35,suggestion,-1,10
125662,"I don't think using parse_rstatus_t as the return type really makes sense for this function. 

And exactly because both callers are validating the size of the read buffer, they wouldn't proceed assuming they have a primitive element at hand when this fu",2018-05-05 02:41:25,suggestion,-1,10
125662,This is one of those functions that would be declared as a protected member if we were using an OO language. The only module that should use this one directly is the parser.,2018-05-05 02:45:08,suggestion,-1,6
2630136,"Do you think we can find an alternative value to indicate remove all? I think having 0 be this value can be quite misleading, and somebody who has not read this comment may just assume a call to remove with count == 0 will just be a no op. ",2018-05-19 03:31:35,suggestion,-2,1
2630136,"it should work without needing to process count at all with int64 max and min, maybe we can define some macros to indicate these values",2018-05-19 03:37:32,suggestion,0,11
125662,"the `count == 0` behavior is borrowed from `LREM` syntax of Redis (https://redis.io/commands/lrem), I don't feel strongly about this either way but am happy to look for alternatives.

For example, we can perform the same check as in remove where count =",2018-05-19 05:17:40,response,0,5
2630136,"I see, I'm fine either way as well, especially if ziplist is only going to be used for redis protocol for the foreseeable future. I'll defer to your judgment here. ",2018-05-19 06:49:31,response,2,9
47822,herp derp,2018-06-30 13:18:29,response,-2,13
47822,"I wasn't sure how the path to the cdb file should be specified, i.e. config file or command-line arg",2018-06-30 23:58:37,response,0,9
47822,I wasn't sure how to make this visible in rust. I guess having a function rust can call to get the value would be one way.,2018-07-01 00:00:37,response,0,6
47822,This is where the newly added `rsp->vbuf` gets hooked up for use on the rust side.,2018-07-01 00:03:35,response,0,3
47822,I was operating under the assumption that `rsp->flag` and `rsp-vcas` were ok to leave at 0 here for a read-only backing store,2018-07-01 00:04:21,response,0,11
47822,"TODO: remove, cruft",2018-07-01 00:16:27,suggestion,-1,7
47822,"This block, cargo-culted from the bindgen user guide, pulls all of the generated types in to the 'bindings' mod",2018-07-01 00:17:58,response,0,9
47822,in a follow-up branch i've implemented this as a param that gets passed through to the cdb handle creation method.,2018-07-02 22:14:30,response,0,10
125662,For RO backend this would be of no use. Delete?,2018-07-04 03:51:37,suggestion,-3,7
125662,"yep, totally fine.",2018-07-04 03:49:52,response,3,13
125662,I think you may save some space by collapsing these cases and apply something like `_process_unsupported()` to all of them.,2018-07-04 03:52:34,suggestion,0,7
125662,"RSP_VAL_BUF_SIZE is relatively large. If we allocate one such buffer per response (which I've been assigning/caching one per connection), you may end up using a lot of memory when the connection count is high. E.g. my current ""high connection count"" test ",2018-07-05 08:28:01,response,-1,7
125662,remove this one?,2018-07-05 08:20:35,suggestion,-1,1
125662,merge the default function into this one,2018-07-05 08:21:04,suggestion,-1,8
125662,CDB should have no use of the flush option,2018-07-05 08:32:15,suggestion,-2,7
125662,"I think this can also be moved to the invalid section, `gets` is used for  subsequent`cas`",2018-07-05 08:34:22,suggestion,-1,5
125662,default OFF,2018-07-03 05:33:14,response,0,10
125662,can be deleted,2018-07-03 05:44:27,suggestion,-2,7
125662,Nice.,2018-07-03 05:33:23,response,4,13
125662,most of these can be deleted? I think the generic client error is sufficient.,2018-07-03 05:45:09,suggestion,-2,7
125662,I think in a stable version this needs to be a server decision. So the capacity of the buffer will be announced to the storage module and storage can return the size of the data while copying things into this buffer. The treatment of return value in `snpr,2018-07-03 05:43:57,suggestion,0,11
125662,"Ideally I think it'd be nice to turn on cdb compiling if Rust is detected on the host, otherwise the target is skipped. Similar how test target is treated depending on whether check can be found or not.",2018-07-03 05:35:56,suggestion,0,12
2630136,"I'm not seeing this check in `tcp_reject()`. Do we want to retry accepting the connection in that function as well? If so, I think we can de-duplicate some of the code in this function and in `tcp_reject()`.",2018-07-04 09:07:59,suggestion,-1,10
2630136,"shall we also make `hdl->reject` in admin thread also use `tcp_reject_all`? if so, i think we can get rid of `tcp_reject`.",2018-07-04 09:25:03,suggestion,-1,7
125662,"That is because `tcp_reject()` calls `_tcp_accept()` which has this logic. For actual accept we have to process one socket at a time (hence the `break` at the end of the `for` loop in `_tcp_accept()`, but if we are rejecting connections we don't need to w",2018-07-05 08:09:02,response,0,10
125662,Ah you called out something important here- admin thread can interfere with server thread still! So I will replace all the `*_borrow()` with `*_create()` and similarly on the return side so admin thread is not messing with resource pooling. This way we sh,2018-07-05 08:15:00,response,4,9
125662,I'm not too worried about having too many incoming connections on the admin port and resulting in a multitude of stream objects being created. For the current use (mostly stats) that has negligible effect on the overall RSS.,2018-07-05 09:06:16,response,1,7
2630136,"I think it would be good to document in a comment that buf_sock pool ""belongs"" to the server thread, for the sake of posterity",2018-07-06 00:28:22,suggestion,0,3
125662,Good idea. adding.,2018-07-06 02:22:56,response,2,13
125662,add a new line?,2018-07-06 22:04:51,suggestion,2,1
125662,"At some point we need to consider the choice of logger for debug information, hopefully it'd be possible to stay consistent with the C portion of pelikan.",2018-07-06 22:13:00,suggestion,0,1
125662,Does Rust have style guide on the ordering of imports?,2018-07-06 22:08:51,suggestion,-1,1
47822,"well, intellij's plugin does them strict alphabetical both linewise and inside the curlies.

Here's the style guide entry: https://github.com/rust-lang-nursery/fmt-rfcs/blob/master/guide/items.md",2018-07-06 23:44:25,response,0,1
47822,It may be possible to hook the log crate into the existing pelikan log machinery by writing our own backend for it. I'll look into it.,2018-07-06 23:46:12,response,2,11
47822,I believe this is cruft. I'll remove it,2018-07-06 23:47:57,response,0,7
2630136,nit: indentation here looks off,2018-07-07 00:49:29,response,-2,1
125662,Can you move and preserve the comment quoting the memcached protocol's treatment of expiry around here?,2018-07-10 03:40:35,suggestion,-2,3
125662,"Here we can call it `time_memcache2process_sec()`

For all the above, if the name seems way too long, we can use something else, or shorten them to be `time_u2p_*`, `time_d2p_*` and `time_m2p_sec()` (no need for finer-grain timestamp for memcache)",2018-07-10 08:34:43,suggestion,-1,2
125662,"Do you think we can rename these primitives to make it more obvious when the clock started?
e.g., we can have:
`process_time_sec()`, `process_time_ms()` .... that were started when the process started.",2018-07-10 08:16:05,suggestion,-2,2
125662,"I think the original typedef wasn't necessarily the best choice of name. Is this relative because the process itself is started at arbitrary time measured by Unix time, or is this relative because we are comparing against the process's clock? I would like",2018-07-10 08:31:39,suggestion,-2,2
125662,"Here we maybe able to name it as `time_delta2process_sec()`, etc",2018-07-10 08:32:58,suggestion,-1,2
125662,"I'm generally in favor of command line option (over compile switch), because then we can use the same binary for different settings without recompiling.

Also, the naming here is backward-compatible but may be challenged given the expansion to include f",2018-07-10 08:28:22,suggestion,0,9
125662,This function probably could be called `time_unix_sec()` and become more apparent.,2018-07-10 08:41:37,suggestion,-2,2
125662,Was there an error without this line?,2018-07-10 08:45:25,response,-1,7
2630136,"`struct duration` can't be declared in pelikan without these definitions, since the definition of them in ccommon relies on these definitions being there. Without this, `struct duration` in cc_timer.h is just a forward declaration.",2018-07-11 00:49:38,response,-1,9
125662,"Actually, the real problem with compile-time option is that if Redis wants one style of timestamp but twemcache wants another it would be really hard to compile them at once.",2018-07-11 01:44:47,response,0,9
125662,these can be removed I think?,2018-07-11 10:06:10,suggestion,-1,7
125662,"Not your change- but I wonder if it's better to just set it to INT32_MAX, but maybe it's not that important...",2018-07-11 10:08:15,suggestion,-2,11
2630136,"thanks for catching that, removed it.",2018-07-11 13:57:43,response,3,13
2630136,filed #189 to look into this.,2018-07-11 14:04:15,response,0,13
125662,"if `ttl = 0` gets translated to `INT32_MAX`, we can assume that any expiry less than that is an actual expiry instead of an approximation for ""never expire"". Since we start by ""selecting"" the first offset, in the case where no item has a shorter TTL, we w",2018-07-26 18:55:09,suggestion,0,11
125662,For consistency should we use `INT64_MAX` instead of `INT64_MAX - 1` in the finer grain timestamps?,2018-07-26 18:40:02,suggestion,-1,1
2630136,"hm, I think you are correct. we don't need to make an exception for unbounded timestamp, i think i was thrown off by the ""legal timestamp"" comment. cool, i'll change this back to the original behavior.",2018-07-27 00:56:26,response,2,4
2630136,"yes, thanks for reminding me. done.",2018-07-27 03:22:13,response,3,13
2630136,ditto,2018-07-26 01:18:32,response,-1,13
2630136,should this be set to NULL after being destroyed?,2018-07-26 01:15:57,suggestion,-1,5
2630136,nit: space before `*`,2018-07-26 01:16:23,suggestion,-3,1
2630136,ditto,2018-07-26 01:19:02,response,-1,13
47822,good catch!,2018-07-26 02:12:38,response,4,13
2630136,have you tested this? i think `bstring_set_text` only works for string literals,2018-07-26 05:43:59,feedback,-2,9
2630136,"adding these comments here, because github doesn't support inline comments outside of the diff:

line 78: we can just use bstring_init to reset value_buf
like 104: nit: i think you can just say `rsp->vstr = *vstr;`",2018-07-26 05:44:06,suggestion,-2,3
47822,i think `bstring_set_raw` is for string literals. I've started up the server with this code and it answers queries.,2018-07-26 07:51:20,response,0,9
47822,"ah, good call!

I wasn't 100% sure about the semantics for doing that assignment on 104 so i just did the safe thing :)",2018-07-26 07:54:12,response,4,13
47822,"ok, i fixed that in the latest revision and added a test",2018-07-26 07:54:43,response,1,12
2630136,"whoops, you are right. i misread.",2018-07-26 07:54:50,response,2,13
47822,i had to try both :),2018-07-26 07:56:44,response,3,13
125662,how arbitrary is the number 2048?,2018-07-26 21:49:05,response,0,11
125662,Your git expertise is showing in this file ???? ,2018-07-26 19:51:47,response,5,13
125662,nitpick: ending paren not strictly aligned.,2018-07-26 20:37:09,response,-2,1
125662,leaking Twitter-specific concept such as packer and service role here,2018-07-26 22:19:50,response,-1,6
125662,bash style Q: is it more common to have spaces around the pipe `|`?,2018-07-26 19:55:58,response,0,1
47822,"non-arbitrary, that's how big the initial (primary) index size is. I'll use the constant I defined elsewhere, I just got lazy.",2018-07-26 22:30:16,response,0,11
47822,"I mean, i'm open to suggestions. Seems like kind of a hassle to have this stored separately.

One thing we could do to keep this out of master would be to put it in an orphan branch (like `gh-pages`). That way it's still ""in the repo"" but it's not part ",2018-07-26 22:34:06,suggestion,-1,13
47822,"[putting prosthetic neckbeard on top of actual neckbeard]

Most shell I've seen does _not_ put spaces around pipes, and I never do. It's not wrong to put spaces around the pipe (and I think some prefer that convention) but I always thought it's kinda am",2018-07-26 22:41:25,response,2,1
47822,"some suggestions:

`bstring_set_raw` might be better named `bstring_set_literal`
`bstring_set_text` might be better named `bstring_set_char_p` or `bstring_from_char_ptr`",2018-07-26 22:52:49,suggestion,-1,2
2630136,"I like `bstring_set_literal`. I think `bstring_set_cstr` is a clear name to me, not sure how you guys feel about it though. ",2018-07-27 04:08:40,response,4,2
47822,"`bstring_set_cstr` is good. +1

Rust has `CStr`/`CString` to refer to a null-terminated string, so it follows that naming convention well. ",2018-07-27 06:48:46,response,5,2
47822,Ok I figured out what to do: we can put the specific stuff in source. I don't know why i didn't think of that before.,2018-07-27 08:23:28,suggestion,-1,5
125662,Created https://github.com/twitter/ccommon/issues/175 to update APIs as suggested,2018-07-30 17:36:52,response,0,9
125662,"So this assumes python directs to python2. Probably fine for now, just want to point out.",2018-07-30 17:39:52,response,1,9
125662,"Saw my old comment ` /* TODO(yao): rename this */` in `cc_bstring.h`, I'm happy to rename either or both if you both think the name is confusing.",2018-07-26 20:34:04,response,2,2
125662,ditto,2018-07-26 22:21:11,response,0,13
47822,"ugh, ok you're right. i'll fix it",2018-07-31 03:57:43,response,-2,13
47822,fixed in #199,2018-07-31 04:38:15,response,0,13
125662,"I think it's cheap if we:
- inline this function;
- make (slab) profile visible (so we can define an inline function in the header);
- implement as `return (profile[it->id] <= item_size(it) + len);`

Mostly this is cheaper because `item_slabid` does ",2018-08-08 08:14:07,suggestion,-1,7
125662,"Also, maybe changing `len` something like `delta` or `increment` will make the purpose of the function even more obvious?",2018-08-08 08:15:15,suggestion,-2,1
125662,"What do you think the relationship between `ziplist_remove` and `ziplist_trim` should be? I admit I haven't thought about this very carefully, but do you think trim will either enable or simplify implementation of commands that remove doesn't support well",2018-08-08 08:31:04,response,1,10
2630136,"I probably haven't thought about this carefully enough either. The most obvious benefit of `ziplist_trim` as currently implemented right now is it saves on one remove call if we are trimming in the middle of the list. But for other cases, it is essentiall",2018-08-09 04:42:42,response,1,10
125662,"Good catch guarding against empty pointer. Shall we use an internal variable and assign that to `*removed` at the end, to avoid extra jump instructions?",2018-08-09 07:17:10,suggestion,4,4
125662,"I feel this is probably me not explaining what I was thinking when implementing this function- I was leaning toward leaving the translation (""0 -> all"") to the upper layer, similar to how we handled TTL timestamps in the protocol/storage, to keep the lowe",2018-08-09 07:15:56,response,0,10
2630136,"yea, i actually like the original behavior better too. the reason i changes this is that count == 0 for lrem in redis means remove all. i will revert this; perhaps we can move this logic out to protocol if we want to support the redis behavior. ",2018-08-09 07:41:20,response,2,10
2630136,"however, returning error also seems wrong to me. intuitively, it seems like this case should just be a no op",2018-08-09 07:47:21,feedback,-2,10
125662,"Agree that noop is the better behavior.

This file is part of ""data_structure"", we can still put the translation in Redis' lrem implementation, e.g. in `src/server/redis/data/cmd_list.c` or somewhere like that.",2018-08-10 01:40:27,response,1,10
125662,do you want to prepend instead of append?,2018-07-10 03:47:26,suggestion,-2,10
125662,`()`->`(void)`,2018-07-10 04:16:00,feedback,-2,1
125662,I lean toward either naming the rs-C APIs `rs_*` (e.g. `rs_log_setup()`) or `*_rs`(`log_setup_rs()`) even just for the sake of simpler regex for search.,2018-07-10 04:14:21,suggestion,-1,2
125662,???? ,2018-07-10 03:52:15,response,-3,13
125662,"at some point we need to fix the year line across the repo, but not today",2018-07-10 03:48:19,suggestion,1,1
47822,"[observation] It seems a little odd to me that all of these are `__ATOMIC_RELAXED`. I would have expected at least some to be `__ATOMIC_SEQ_CST` or `__ATOMIC_ACQ_REL` (basically enforcing _some_ form of barrier).

I don't have any experience with these ",2018-07-20 00:49:59,response,-1,10
47822,"should probably check for NULL pointer here

```
if ((arr == NULL) || (*arr == NULL)) {
    log_error(""ring_array_destroy passed NULL pointer"");
    return;
```

(or if we want to be especially bold make it an assertion)
",2018-07-20 00:53:18,suggestion,-1,4
2630136,"basically, with the producer/consumer model that the ring_array is intended for (which is used in pelikan for server/worker thread connection handoff, where server is the producer and worker is the consumer), we use a ""pessimistic"" view for rpos and wpos ",2018-07-20 00:56:55,response,0,9
47822,"Wow, ok, thank you for the explanation, that makes sense ???? ",2018-07-20 00:59:39,response,5,13
2630136,"good call, thanks! ",2018-07-20 01:00:23,response,5,13
2630136,nit: prevailing style in this repo is to have a space between `for` and `(`,2018-07-18 05:36:31,suggestion,-2,1
2630136,"nit: prefer `sizeof(*rv)` in this case. it probably doesn't make much of a difference here, but by using `sizeof()` this way, if the type of `rv` changes, we can avoid making this change in multiple places.",2018-07-18 05:44:22,suggestion,-1,10
2630136,"why not just start by allocating struct bstring to the pointer and initializing/allocating the underlying buffer there, instead of copying from this bstring on the stack?",2018-07-18 05:42:32,suggestion,-2,10
2630136,nit: prevailing style in this repo is to use /* */ style comments only,2018-07-18 05:45:00,suggestion,-2,1
2630136,This should be cc_free,2018-07-18 06:25:21,suggestion,-2,2
47822,"So my thought was that if the `cc_alloc` fails, I don't have to clean anything up, I can just return NULL and don't have to worry about freeing the pointer. I can change it if this isn't idiomatic.",2018-07-18 06:18:50,response,0,4
47822,ah! good to know!,2018-07-18 06:19:43,response,3,13
2630136,We need to check if the cc_alloc succeeded here. Also echoing what I said earlier re: sizeof().,2018-07-18 12:53:06,response,1,9
2630136,"I think allocating the pointer and initializing that directly results in the same number of failure clean ups. Like this:
```
struct bstring *bs = cc_alloc(sizeof(*bs));
if (bs == NULL) {
    return NULL;
}

bs.len = size;
bs.data = cc_alloc(size)",2018-07-18 06:25:23,suggestion,2,9
47822,"need to fix this path, should be: `ccommon/rust/ccommon_rs/src/log/mod.rs`",2018-07-22 01:49:01,feedback,-2,9
125662,This leaks Twitter-specific environment variables. What's the binary dependencies on these folders and can we replace them by something already set in environment?,2018-07-23 13:50:52,suggestion,-2,9
47822,"unnecessary, i'll remove it",2018-07-23 19:29:56,response,-1,13
125662,remove this line?,2018-07-30 19:35:56,suggestion,-1,1
125662,"here the capacity is only used for logging, and after the code change the description no longer matches the function called. Maybe rewrite as `log_verb(""destroy buf %p size %""PRIu32, *buf, buf_size(*buf));`?",2018-07-30 19:30:10,suggestion,-1,3
2630136,"actually, i think this assumption i made is incorrect, and `realloc` doesn't guarantee success while trimming, and it depends on the implementation. so I guess the best thing would be to return a status here, but the original buffer will still be valid.",2018-07-30 23:50:44,feedback,0,9
2630136,"the capacity/size here is also used for the stats calculation below, and using `buf_capacity` was giving us incorrect stats. but yes, I will change the log message.",2018-07-30 23:52:30,response,0,3
6377806,What is container-id remapping? This is not applicable to all schedulers. Please see if you can re-word this or give some examples.,2018-01-04 05:57:43,suggestion,-2,3
3200023,"I think this line might have a bug.

idx1 is not -1 when the string is not found. Instead, it is -1 + pattern.length(). So you cannot compare it with 0.

Suggest to add a unit test for the function to make sure it works correctly in both successful an",2018-01-20 03:15:14,feedback,-1,4
32022953,updated,2018-01-20 05:39:25,response,0,13
3200023,"I think it should be better to test containersToAdd.size() == newAddedContainerId.size().

The controller.addContainers() function could return empty set or smaller set, and we need to handle the two cases here.",2018-01-20 07:49:20,suggestion,0,12
3200023,"Suggest to have a unit test for this function, not a blocker though.",2018-01-20 07:41:22,suggestion,-1,12
3200023,"the function signature is ""String auroraStdoutStr"" and here the parameter is stderr. Maybe the parameter should be renamed.",2018-01-20 07:42:37,suggestion,-1,2
32022953,update to `auroraOutputStr`,2018-01-20 08:07:20,response,0,10
32022953,"there was a unit test already.
added one more unit test",2018-01-20 08:24:05,response,0,12
32022953,done,2018-01-20 08:24:12,response,0,13
3201045,"n1-standard-4 and there is no need for 2 SSDs per machine. Since we use stateful sets, there is no need for it.",2018-01-19 09:32:49,suggestion,-2,7
3201045,"We need to add a repo - 

helm repo add heron-charts <url>",2018-01-19 09:35:16,feedback,-1,13
3201045,local ssd count - is not needed.,2018-01-19 09:34:19,suggestion,-2,7
3201045,Again SSDs are not needed since we use stateful sets. The stateful sets automatically create the necessary persistent claim templates.,2018-01-19 09:33:52,suggestion,-3,7
32022953,what happens if looper does not stop after 10 seconds,2018-01-03 05:49:07,response,0,3
3200023,"The function stops waiting and returns false.

In this case, the code works pretty much the same way as before after the waiting. Except exitLoop() set a flag to true so the looper won't do any real work afterwards.
",2018-01-03 07:51:59,response,-1,5
1575030,nit.  Please remove extra space,2018-01-03 15:19:46,suggestion,-1,1
1575030,Place remove extra line,2018-01-03 15:20:06,suggestion,-1,1
1575030,"If a custom trigger or evictor, validate should not be called.  Arguments would be directly passed into the custom evictor and trigger when they are intialized",2018-01-04 01:56:53,suggestion,-2,7
1575030,I think we should remove this from the interface.  Having this interface is confusing to users since WindowManager implements the TriggerHandler interface.  WindowManager is also not a interface that users can implement thus it shouldn't be part of an int,2018-01-15 04:30:05,suggestion,-1,1
1575030,"Not sure if this interface is necessary, if we remove WindowManager from the TriggerPolicy interface ",2018-01-15 04:31:29,suggestion,-1,7
39206301,"The reasoning behind this was that the WindowManager, TriggerHandler (which is the WindowManager) and TopologyConfig are three things the users may not have access to directly.  I was aiming to provide access to the same structures used in the internal Tr",2018-01-15 08:39:14,response,0,11
39206301,"Regardless, you would still need a way to get the TriggerHandler (WindowPolicy) attached to the custom TriggerPolicy that was passed to the config.  AbstractBaseTriggerPolicy was just made as a way to standardize how these attachments were handled for the",2018-01-15 08:39:17,suggestion,-1,10
1575030,Looking more closely at the code I am confused how the a custom trigger policy will work.  All the existing trigger policies require the WindowManager to actually trigger windows. How will a user implementing a custom TriggerPolicy do this.  They have no ,2018-01-16 07:10:02,response,-2,11
39206301,"Take a look at the changes i’ve made to windowedBoltExecutor.  Essentially, in order to allow these to attach to arbitrary triggerPolicies, Ive replaced their inclusion in the constructor with the setters you see in the interface for all trigger policies.",2018-01-16 22:21:26,response,-1,11
1575030,Not sure if we need these checks.  I think it should be up to the user to make sure to pass in the correct objects he or she needs for a custom trigger.  Having to pass these booleans into the constructor also makes the interface confusing to some reading,2018-01-17 02:43:52,suggestion,-1,11
1575030,I see,2018-01-17 02:44:39,response,0,13
39206301,"@jerrypeng These checks were in place to keep the existing trigger policies as restrictive as they were before wrt which of the objects were attached.  I could provide an alternate no-arg constructor that sets them all to false, then use setters instead? ",2018-01-17 15:00:34,response,0,11
1575030,lets remove them to keep the interface as simple and clean as possible,2018-01-18 03:52:45,suggestion,-1,1
39206301,@jerrypeng will do,2018-01-18 09:23:07,response,0,13
32022953,why newRam != currentRam,2018-01-13 03:22:21,response,-2,3
3200023,"It happens to all algorithms in fact, but it may not be a problem because some algorithms requires per component resources specified.

And it is impossible to be handled in RoundRobin. Different container has different set of components. RoundRobin calc",2018-01-17 02:02:32,feedback,-1,11
3200023,is this expected?,2018-01-19 06:37:03,response,-1,3
32022953,This configuration value is just an example showing it may be different from the slow instance configuration. Uses have to tune the value in the field.,2018-01-20 05:43:34,response,-1,3
3200023,kk. thx.,2018-01-20 08:42:48,response,2,13
992335,"In the light of Scala User perspective and in my opinion, All exposed Scala `Traits` should be **pure scala**. This means Scala traits should accept `Scala Functions` instead of `FunctionalInterface` here:

`def newSource[R](supplier: () => R): Streamle",2018-01-22 00:35:02,suggestion,-1,10
992335,"**General BUILD Comment**:
`*.scala` files are not referenced here. Bazel supports Scala via 
https://github.com/bazelbuild/rules_scala 
so i think we need to use scala_library to compile scala files by referencing
`com/twitter/heron/streamlet/scala/*",2018-01-22 00:26:14,suggestion,0,3
992335,"**General Comment:**
Currently, All files look living under `heron/api/src/scala`. 
- Related `*.scala` files should be under package: `heron/api/src/scala/com/twitter/heron/streamlet/scala`  (except `BUILD` file)
e.g: Currently, _Java Streamlet API_ l",2018-01-22 00:31:13,suggestion,0,3
992335,"**General Serializable-FunctionalInterfaces Comment**
I think all Serializable Functional Interfaces(SerializableFunction, SerializableConsumer etc...) should be hidden from Scala Users. This means Scala API should just accept pure Scala functions instea",2018-01-22 00:39:49,suggestion,-1,6
992335,"In the light of my previous comment, as a sample for `map` function, i think this should be as follows.
`def map[T](mapFn: R => _ <: T): Streamlet[T]`
instead of 
`def map[T](mapFn: SerializableFunction[R, _ <: T]): Streamlet[T]`

Same comment for th",2018-01-22 00:41:59,suggestion,0,10
3200023,UIDs seem to be the same as Java version. Just to confirm if this what we want or not.,2018-01-23 02:55:59,response,0,7
3200023,"I am wondering if we can use case class here? if it is not expected to be extended.

case class KeyValue[K, V](
  @BeanProperty val key: K,
  @BeanProperty val value V) {
  override def toString() = ....
}

val or var depending on the usage.",2018-01-24 01:56:31,suggestion,-1,11
3200023,"suggest to add {}.

try {
  ...
} catch {
   ...
}",2018-01-24 01:58:15,suggestion,0,5
3200023,is this line necessary?,2018-01-24 01:59:16,response,-2,7
3200023,another candidate to be case class.,2018-01-24 02:23:23,suggestion,0,11
3200023,"consider import the package as
import com.twitter.heron.api.{Config => ApiConfig}

then use ApiConfig.TopologyReliabilityMode, etc

instead of full path.
",2018-01-24 01:51:28,suggestion,-1,1
3200023,"same as KeyValue, maybe case class if possible.",2018-01-24 01:57:12,suggestion,0,11
269478,"can't we just use `""{ "" + key + "" : "" + value + "" }""`?",2018-01-24 03:31:07,suggestion,-3,1
269478,"`SerializableFunction` is a java function, not a scala function. which I think you can't really use all those scala syntactic sugar. if we are generating a scala oriented api, it would be better to think about taking scala function, rather than using java",2018-01-24 03:36:59,response,-1,10
269478,"do we really need `String.valueOf` or `toString`? if you just `""{ key: "" + key + "" window: "" + window + "" }""`, it is better than explicitly call `toString`, because it handles null field, while `window.toString` would throw NPE if `window` is null.",2018-01-24 03:31:42,suggestion,-2,7
3200023,"suggest to revert this change. This pattern seems to be used in some other files as well, so this change seems to be unnecessary.",2018-01-24 09:02:37,suggestion,-1,7
3200023,maybe keep the Runnable() wrapper?,2018-01-24 08:57:23,suggestion,-1,10
39206301,"Okay, will revert",2018-01-26 12:11:42,response,0,13
39206301,"Just realized :: was a Java 8 feature- is that why you want this to be reverted?

If so, should I be developing in Java 7?

If not, why? What’s wrong with it?",2018-01-26 12:15:37,response,-1,9
3201045,@dancollins34 - we all use java 8 by default.,2018-01-26 13:34:25,response,-2,9
3200023,"not a blocker.

nothing wrong. more about consistency to other modules.

also in case some users may have to run heron on java7 for any reason.",2018-01-27 04:59:00,response,0,9
3201045,"@nwangtw - use to generate library jars for 7. After twitter moved to Java 8, we also moved to Java 8 - by default you need Java 8 to compile and even to run your topologies.",2018-01-27 05:03:18,response,-1,9
39206301,There seems to be a significant feeling it should be the other way- will revert tomorrow.,2018-01-27 11:03:11,response,0,13
7235147,"let's add a method that we can use below when forming the uri. I don't like setting a static variable here. 
private String getHostnameOrIp(Config config);
Also you can call config.getString(key, defaultValue) so we don't need the string util.
",2018-01-23 10:31:36,suggestion,-2,10
7235147,"can we do a little refactoring and have method call getHostnameOrIp() so we are not setting a static variable like this. Then lines 119/120 becomes:
String uri = String.format(""http://%s:%s/api/v1/file/download/%s"", getHostnameOrIp(), getPort(), fileName",2018-01-24 01:11:54,suggestion,-2,11
7235147,"I think we should not be setting static state here.
final String downloadHostName = getDownloadHostName();
if (StringUtil.isNotBlank(downloadHostName) {
  return downloadHostName;
}

return hostname != null ? hostname : ip;
",2018-01-24 03:25:39,suggestion,-3,10
4456654,Changed it and added a check for ip being null,2018-01-24 04:23:27,response,0,12
1575030,"This changes the expected behavior of the install and will break a lot of things.  For example, the nomad scheduler expected that heron core to be at:

file://${HERON_DIST}/heron-core.tar.gz

you unTARing it here and removing the archive will break th",2018-01-25 14:40:25,feedback,-3,4
1575030,this will Aurora too,2018-01-25 14:41:39,response,0,13
3201045,@jerrypeng - are you using the heron-install.sh script or just untaring the heron.tar.gz?,2018-01-25 14:42:10,response,0,9
1575030,"For nomad/standalone, the user will use heron-install.sh to install on a bootstrap machine.  Then the .heron directory will be copied to all the machines in the standalone cluster as is",2018-01-25 14:44:58,response,0,9
1575030,"It will break Aurora as well:

heron_core_release_uri = '{{CORE_PACKAGE_URI}}'
heron_topology_jar_uri = '{{TOPOLOGY_PACKAGE_URI}}'
core_release_file = ""heron-core.tar.gz""
topology_package_file = ""topology.tar.gz""

# --- processes ---
fetch_heron_s",2018-01-25 14:48:14,response,-1,4
3201045,"@jerrypeng - for nomad case, we can add a config that in nomad/scheduler.yaml - similar to local and it will work. For aurora nothing will break since the core_package_uri will be in a URL that is stored somewhere else.
",2018-01-25 14:53:58,suggestion,0,9
1575030,"I don't understand how adding just a config will work?  Both in Nomad and Aurora start scripts it expects a archive and will execute ""tar zxf"" on it to untar it. We will have to change that as welll",2018-01-25 15:00:15,suggestion,-2,9
3201045,"the core logic - can either curl or use symbolic - which is controlled by a config. It is a question of telling nomad which one to use. For Aurora, the deployment is that - heron-core.tar.gz is served from a file server (like webserver or packer) ",2018-01-25 15:04:24,response,0,9
1575030,ok,2018-01-25 15:15:48,response,0,13
1575030,"gotcha, we can probably use the same method of creating a symbolic link in heron-nomad.sh",2018-01-25 15:33:43,suggestion,1,10
7235147,if these keys do not exist will false just be returned?,2018-01-31 00:54:20,response,-1,10
3201045,We use 4 spaces indentation.,2018-01-26 04:21:14,suggestion,-2,1
992335,Addressed.,2018-01-26 04:36:35,response,0,13
138807,"can we add a method that allows one to collect state associated with a streamlet's state, also I would like to return a meaningful data structure from these methods, maybe a map[String,Int] that corresponds with a status and a meaningful error message",2018-01-26 05:12:25,suggestion,-1,10
3201045,"How do you distinguish the case between 
- Normal running topology
- Topology in a partial state",2018-01-26 11:12:53,response,-1,3
3200023,"if a topology has defn and executionState data, it is considered as ""running"", otherwise it is considered as ""not running"". This is the validation logic in RuntimeManager, and i updated the validateSubmit() called right above to follow the same condition ",2018-01-26 13:39:53,response,0,10
32022953,how is your proposal different from 'change 300 to 300/8',2018-01-27 02:36:21,response,-2,3
3200023,"The issue here is for a bad stmgr, all connections are failing and it is more likely to be a local problem. with a global max attempt, stmgr doesn't need to wait per client failure count to reach 300. Because network failure can be very slow, bad stmgr te",2018-01-27 03:21:52,response,-1,11
32022953,"cool, got it",2018-01-27 03:22:38,response,1,13
3200023,The PR is a simple demo and I don't really like this solution myself. I just think we need a check based on global view. Any ideas are welcome.,2018-01-27 03:26:38,response,3,13
3201045,@lucperkins - is this change ok?,2018-01-30 01:02:41,response,0,13
3201045,@joshfischer1108 - API can be used for topologies running as well in cluster - correct?,2018-01-30 01:01:51,response,-1,9
3210939,"I will back this change out.  I had to do some tricky stuff to get the pages to build on my local.  I meant to revert this, it slipped my mind.  Good catch.  Thank you",2018-01-30 02:28:18,response,5,13
3210939,"@kramasamy Yes, just a typo error. I will fix ",2018-01-30 02:28:57,response,1,4
138807,can you add some comments here as to what this class actually does?,2018-02-07 04:03:51,suggestion,-3,3
138807,Is this annotation needed?,2018-02-07 04:02:49,response,-2,3
992335,"Hi @nwangtw,

Thanks for working on this.

For long-term maintenance perspective, i think the following constants can help us when Scala version is upgraded with just small change (if makes sense)
```
scala_version = ""2.11""
scala_point_version = sc",2018-01-31 03:14:24,suggestion,4,9
3200023,"Sounds good to me.

The lines are pretty much copy/paste from rules_scala. In Twitter we need them to be explicit so that we can redirect them. :( I am just testing if it works ok or not. It seems like Travis is happy now. I am going to update the numbe",2018-01-31 17:01:52,response,-1,9
7235147,is this needed anymore?,2018-01-31 14:15:24,response,-2,7
3201045,@cckellogg - you mean heron_tools_bin_files - probably leave it for now until we don't need it.,2018-01-31 14:17:07,suggestion,0,9
7235147,Yes the heron_tools_bin_files it looks like the new one replaces it.,2018-01-31 14:22:47,response,0,9
3201045,yes for now - Let us leave the old one and remove it later.,2018-01-31 14:23:35,suggestion,2,13
3201045,@cckellogg - we need both since one is used for heron binary packaging while the other is used for docker container.,2018-02-01 07:12:20,response,0,9
3201045,please remove the extra line,2018-02-08 06:59:05,suggestion,-2,1
3201045,LOG.info -  I am assuming that it prints information always during eco topology submission?,2018-02-08 07:01:36,response,0,9
3201045,Please remove the extra space.,2018-02-08 06:58:41,suggestion,-2,1
3201045,Please remove the extra line.,2018-02-08 06:58:21,suggestion,-2,1
3201045,same as before.,2018-02-08 06:59:17,suggestion,-2,3
3210939,"This will only print if someone submits a topology with a `--props` flag pointing to a  file.  If you want I can take this out.
",2018-02-08 10:42:42,suggestion,1,9
3201045,It will be nice to print the highlevel steps that eco topologies do - during submission,2018-02-09 03:33:55,suggestion,-1,1
3210939,"@kramasamy Ok I will end some high level logging for each one of the steps.  I will do this after master comes back to a passing state.
",2018-02-09 03:46:24,respones,0,1
4456654,call this container logs,2018-02-02 03:27:34,suggestion,-3,2
3200023,Suggest to add a comment here.,2018-02-02 05:05:58,suggestion,-2,3
32022953,added,2018-02-02 08:57:08,response,0,13
992335,"Apache Http Client test dependency requires `classifier` flag with `tests` value. To achieve this, `http_jar` support has been used.",2018-02-05 03:51:49,response,0,9
3201045,@erenavsarogullari - is it not possible to use maven jar?,2018-02-05 04:02:40,suggestion,-2,10
992335,"@kramasamy -  Thanks for review this. Currently, Bazel looks having an open PR to support `classifier` functionality. I have tried with `maven-jar` as well. Also, classifier is supported by Maven and Gradle. 
https://github.com/johnynek/bazel-deps/issues",2018-02-05 04:25:41,response,2,9
3201045,@huijunw - thanks for the PR - should we use the same algorithm for both?,2018-02-07 05:09:35,response,3,10
32022953,done,2018-02-07 05:16:25,response,0,13
1575030,installing -> running,2018-02-12 13:13:50,suggestion,-2,1
1575030,y -> by,2018-02-12 13:22:24,suggestion,-2,1
3201045,should we have something like /download/core rather /downloadcore,2018-02-08 08:20:07,suggestion,-1,2
3201045,Do we need this - if we are changing the config later in the same file?,2018-02-08 08:18:24,response,-2,9
1575030,we are not changing it in the file.  The later config is commented an serves just as a reminder that user can do that as well,2018-02-08 08:24:54,response,-1,9
1575030,I can make that change,2018-02-08 08:27:19,response,2,13
138807,"I see a pecularity in the java code that we should discuss, all the implemented Sink classes extend the StreamletOperator and all the classes like StreamletCloneTopology have inner classes that implement Sink<SomeClass>, take a look at this and just make ",2018-02-10 08:04:03,response,-1,11
138807,should this also have the @SerialVersionUID annotation or not or is that only for classes,2018-02-10 07:55:21,suggestion,-1,11
992335,"Firstly, thanks for review.

High level Flow is as follows:
`Scala Streamlet API => [Java Streamlet API => Topology API]`

`ComplexSink, ConsumerSink and LogSink` are internal implementation used as adapter between Java Streamlet and Topology API. Cu",2018-02-12 01:40:22,response,3,9
992335,"It is required for `class/implementation` level because they keep the state. On the other hand, each interface can have multiple implementation and each of them should have its own `@SerialVersionUID`",2018-02-12 01:40:30,response,0,11
2183863,"2 minor comments:
1. Why pass the flag `running` in the constructor, rather than in the `Config runtime`?
2. Name the boolean as `isRunning` will be more expressive and more java style.
",2018-02-16 07:06:13,suggestion,-2,2
3200023,"Thanks!

For 1, ""config"" is for the topology configuration. running flag is not a config.
For 2, will do.",2018-02-16 07:30:06,response,0,11
2183863,OK Fair enough.,2018-02-16 07:37:33,response,1,13
3201045,Here the topology might not be in the running state?,2018-02-16 16:26:17,response,-2,11
3200023,"""Running"" means there are both topology defn and execution state data.

If any of them is not available, it means the topology is not ""running"". This could be caused by a failed submit command or a failed kill command.

Like we discussed before, in th",2018-02-17 02:31:48,response,0,4
3200023,"And for all other commands, validation code shouldn't allow them to be executed. So in this line, isRunning flag should always be true.",2018-02-17 02:32:50,feedback,-1,10
2183863,"Karthik mentioned a good point. `Running` can be confusing since we have used it already for topology state `Running`, `Paused`, etc.
Maybe we could rename it to `isExisting`?",2018-02-17 07:36:14,suggestion,0,2
3200023,That is true. Let me think about it. Thanks.,2018-02-17 08:57:01,response,4,13
3201045,What is this message for?,2018-02-19 15:41:20,response,-2,3
3201045,foundData - does not sound like a good name. Any other choices?,2018-02-19 15:42:36,response,-3,2
3200023,"I think if topology data is not available, it is possible that the topology was not running.  The message ""Scheduler killed topology %s successfully.""  can be misleading. So I think in this case, ""scheduler has tried to clean up"" is more accurate.

",2018-02-19 18:07:11,suggestion,-1,1
3200023,"sigh.

Maosong suggested ""exist"" but I feel it is not good either. :(

This is a trick case and naming is tricky too.

",2018-02-19 18:08:08,response,-3,2
3201045,"this data is all about executionState - is it correct? if so we can name it as
```
executionStateExists
```
will do?


",2018-02-19 18:11:09,suggestion,-1,2
3200023,"- dataFound
- topologyFound
- topologyExist
or reverse them:
- topologyNotFound
- topologyNotExist

Which one sounds better?",2018-02-19 18:16:11,suggestion,0,2
3200023,"it is not only about executionState.

We got a report later that executionStateExists is available but definition is not. Basically none of them is safe.

This flag is from this logic:
Boolean isTopologyRunning = adaptor.isTopologyRunning(topologyNam",2018-02-20 05:00:18,response,-2,10
3201045,"@nwangtw - this is not data. this is metadata actually. this is what we call executionState (it consists of logical, physical plan and additional information)",2018-02-20 14:22:18,response,-2,11
3201045,"alternatively a better one is 

```
staleExecutionData
```
",2018-02-20 14:23:24,suggestion,-1,2
3200023,kk. sgtm. let me make the change.,2018-02-20 16:02:44,response,5,13
3200023,"It seems ""ExecutionState"" is a bit unclear here. One zk node is for ""ExecutionState"", the code is:

ExecutionEnvironment.ExecutionState executionState = adaptor.getExecutionState(topologyName);

I am going to use ""hasExecutionData"" in this function an",2018-02-20 16:12:29,suggestion,0,10
3201045,@nwangtw - can you make this as a function?,2018-02-24 02:58:55,suggestion,-2,8
3200023,sounds good. let me do it.,2018-02-24 03:03:58,response,4,13
3201045,this message might not be misleading - since we are not killing the topology I think.,2018-02-24 04:14:14,response,1,11
3201045,"is this variable 

```
hasStaleExecutionData
```",2018-02-24 04:15:40,response,-1,2
2183863,Need to think about whether to rollback the packing_plan on zk if failure happens.,2018-02-14 08:52:45,response,-1,4
2183863,Need to check whether we successfully add containers.,2018-02-14 08:56:08,suggestion,-1,10
2183863,"Would be much better if we can print meaningful log to notify users when unrecoverable bad things happen, like:
```
Failing to update topology. The topology can be in a strange stage. Please check carefully or redeploy the topology.
```",2018-02-14 08:54:44,suggestion,-3,1
32022953,"There are two scenarios: recoverable and unrecoverable. Aurora may be in unknown state when it fails, resulting unrecoverable situation. ",2018-02-14 20:45:12,response,0,9
32022953,updated,2018-02-14 20:45:22,response,0,13
32022953,The update procedure may throw several exceptions which are hard to be differentiated in the upper function. I added the suggested print msg in the present exception msg.,2018-02-14 20:58:32,suggestion,-1,4
2183863,"We can simply get the env from `Context` (https://github.com/twitter/heron/blob/master/heron/spi/src/java/com/twitter/heron/spi/common/Context.java#L36). No need to ask Aurora Status.
",2018-02-15 14:25:41,suggestion,-3,9
2183863,I think this `check quota` logic should be at the upper level rather than at this level. i.e. in `AuroraScheduler.addContainers(...)`,2018-02-15 14:22:44,suggestion,-1,8
32022953,i do not think so. the aurora tier is not same with env in job spec key,2018-02-15 14:32:13,response,-3,9
32022953,do you mean adding `check quota` to spi/scheduler interface,2018-02-15 15:24:48,response,-2,11
2183863,"I mean, we can do this 
```
try {
      JsonNode jsonStatus = askAuroraStatus();
     ...
}
```
in `AuroraScheduler.addContainers(...)`",2018-02-15 15:59:19,suggestion,-2,5
2183863,"I mean, only when users try to update a topology in `prod` env, which can be parsed from the `Context`, we will try to `askAuroraQuota()`; we don't need the method `askAuroraStatus()`",2018-02-15 16:02:35,response,-2,7
3200023,"This is not safe.

Although ""tier = preferred"" is the current config for production jobs,  I would expect that ""production: true"" is still being used in many other companies.

Also tier is customizable, so I think there is no safe way to check isProd(",2018-02-15 16:10:26,response,-3,4
3200023,"Personally I feel this is a bit overkill.

Aurora does resource check for prod environment first and throw an error if there is no enough resource so try/catch should work although not perfect. It is definitely nice to have a pre-check to have more mean",2018-02-15 15:55:39,suggestion,-2,9
3200023,"I am afraid that this is not totally true. Dedicate cluster doesn't have quota requirements to start a cluster I think.

""Aurora requires resource quotas for production non-dedicated jobs. "" in
http://aurora.apache.org/documentation/latest/features/mul",2018-02-15 15:59:29,response,-1,9
3200023,update year,2018-02-15 15:44:28,suggestion,-2,1
3200023,It is not a safe assumption.,2018-02-15 16:26:56,response,-3,4
2183863,"@nwangtw it should be safe; this should be verified ahead to come to the actual update stage.
Furthermore, topology-name is unique for a cluster, so there will be not topologies with the same name in one cluster.",2018-02-15 16:50:24,response,0,4
32022953,"if we cannot know if topo is prod anyway, shall we use cluster/role/`env` to judge isProd() as maosong suggested previously. so that the code will be simple and stupid .. what do you think @maosongfu  @nwangtw ",2018-02-15 17:07:46,suggestion,-2,7
2183863,"I agree it is a bit overkill, if we are to use this implementation.

But the point is: it is pretty common that users forget requesting more resources and then fail with insufficient resources. It is a super bad experience.

Another thought is: before",2018-02-15 17:16:10,suggestion,-1,4
32022953,"If there is prompt, do we need this pr still? I assume user types Y and takes the risk",2018-02-15 17:30:31,suggestion,-2,7
3200023,the env value is less safe. :(  ,2018-02-16 06:08:58,response,-2,6
3200023,"I agree with maosong that this is a quite common issue and we should see what we can do. I think a warning could be helpful for users to be aware of this issue. They are free to take the risk but it is our problem that they don't know the risk.

Ideally",2018-02-16 06:15:50,suggestion,0,1
3200023,"I mean from aurora point of view.

From aurora doc it seems to me that environments are configurable. For example, inside Twitter we call it ""prod"" and in apache doc it is called ""production"".

Another one is that users might config their prod jobs to",2018-02-16 06:20:51,response,0,9
3200023,I am wondering if it is possible to move this check to RuntimeManagerRunner.java.,2018-02-16 14:25:40,suggestion,-1,8
3200023,looks like you dont need the space at the end of fmt.,2018-02-16 14:16:00,suggestion,-1,1
3200023,maybe rename to something like confirmWithUser(). How do you think?,2018-02-16 14:18:53,suggestion,-1,2
3200023,"I think it might be better to check ""y"" instead of ""n"". don't forget to update ""[Y/n]"" to ""[y/N]""",2018-02-16 14:13:48,suggestion,-1,1
3200023,"""Scheduler failed to add requested containers. Requested X, added Y. ...""",2018-02-16 14:30:16,response,-2,4
3200023,"suggest: ""No console to prompt user. Proceeding.""",2018-02-16 14:15:33,suggestion,0,1
3200023,maybe a warning to be more explicit,2018-02-16 14:22:45,suggestion,-1,1
3200023,This error message is declared and used in a few different places. Is it possible to clean it up?,2018-02-16 14:28:36,suggestion,-1,1
32022953,updated,2018-02-16 15:40:07,response,0,13
32022953,how to?,2018-02-16 15:40:01,response,-1,13
32022953,updated,2018-02-16 15:39:17,response,0,13
32022953,updated,2018-02-16 15:39:32,response,0,13
32022953,updated,2018-02-16 15:39:38,response,0,13
32022953,updated,2018-02-16 15:39:43,response,0,13
32022953,"this file in schedulers directory, the others are in scheduler-core. what do you suggest?",2018-02-16 15:40:47,response,2,9
32022953,removed,2018-02-16 15:39:25,response,0,13
2183863,"In general, it is a bad idea to require a console to be assigned as this very much impacts the flexibility of your application. Many ways of invoking Java will not assign a console (i.e. `System.console()` returns null), and your application is unusable i",2018-02-16 15:35:32,response,-4,9
2183863,"I would suggest having an option (can be overridden by `config-override`) to bypass the prompt so it is easier to invoke the `update` command in other scripts or process, like ci, Jenkins.",2018-02-16 15:50:07,suggestion,0,11
2183863,Why not LOG.error(...)?,2018-02-16 14:31:04,suggestion,-2,4
32022953,updated,2018-02-16 16:38:29,response,0,13
32022953,gone with Console,2018-02-16 16:38:41,response,0,9
32022953,will do in another pr,2018-02-16 16:38:51,response,0,12
32022953,added the config to pass ci,2018-02-17 12:43:20,response,0,11
3200023,"The config name is not very straghtforward. Suggest to add a comment for it. Also include the values:
disabled => no prompt
prompt => enable prompt.
",2018-02-17 18:53:02,suggestion,-2,3
3200023,"The function addContainers() above the if statement is in AuroraCLIController, the code looks like:

public Set<Integer> addContainers(Integer count) {
  ....
  return extractContainerIds(stderr.toString());
}

You should be able to check container",2018-02-17 18:24:07,response,0,10
32022953,"i think this check is for all schedulers, not only for aurora , as suggested by maosong",2018-02-17 19:26:26,response,-1,12
3200023,"still not very clear. How about let's do something like this:

// Prompt user when more containers are required so that user has another chance to double check quota is available. To enable it, change the config from ""disabled"" to ""prompt"".",2018-02-17 19:34:07,suggestion,-2,1
3200023,kk. that could be useful.,2018-02-17 19:27:43,response,2,13
32022953,updated,2018-02-17 19:46:40,response,0,13
3201045,Confirmation with the user should not be for all cases. If the user knows the behavior - it is annoying everytime to say yes/no - furthermore think about the fact that heron update is running in CI/CD - yes/no will not work very well.,2018-02-19 15:18:53,suggestion,-3,12
3201045,This code is in scheduler core - you cannot assume that it is aurora specific. It is used by other schedulers. Please change this,2018-02-19 15:16:09,feedback,-3,9
3201045,This verification can be done at the cli level itself - rather than doing it in the core.,2018-02-19 15:36:04,suggestion,-2,11
3201045,Do you need this another warning?,2018-02-19 15:36:55,response,-2,3
3201045,"furthermore, there is no way for the user to verify whether the resources are available. Resource checking should be automatic.",2018-02-19 15:55:29,suggestion,-3,1
32022953,"The user usually assumes the topology keeps same as before the command is issued, however, the topology may be in unknown state. This warning is explicitly to tell user the check the topology state.",2018-02-19 18:22:49,response,0,11
32022953,will remove `aurora`,2018-02-19 18:20:48,response,0,9
32022953,"There is a toggle switch for this prompt. The default value is off, no change to the existing behavior.",2018-02-19 18:20:43,response,0,1
138807,"It seems we are overriding the java Sink and plugging in our sink, however what happens if the sink is sufficiently complicated inside those methods, do we need to account for that",2018-02-26 11:35:23,suggestion,-1,9
138807,"what does this imply when we pass the javaStreamlet as an arg and have it listed with a colon, the notation is a bit confusing here, can you add some comments",2018-02-26 11:36:52,suggestion,-2,3
138807,"I think we need to make this object be general purpose for all of the scala traits to use, for the Builder stuff lets get this code review moving before I work more on that because I will add more to this function for the Builder stuff",2018-02-26 11:33:17,suggestion,0,11
138807,"I am assuming this class can be used across the Streamlet API , is that assumption correct, where do you see this class being used?",2018-02-21 10:54:43,response,-2,11
138807,"I see that you have a singleton object and a class, do we need both?",2018-02-21 10:55:52,response,-2,7
992335,"`Builder` functions accept both `SerializableSupplier` and `Source`. You can use existing `toSerializableSupplier` for `SerializableSupplier`. For `Source`, `toJavaSource` function needs to be created as same as with existing `toJavaSink` function.",2018-02-27 07:14:48,suggestion,0,10
992335,"Yes, this is `Scala Companion object` and object parts covers `static functions`. For example, `createSupplierStreamlet` function is static in `Java StreamletImpl` and used by its UTs.",2018-02-27 07:27:10,response,0,11
992335,"After related `user defined function` is applied(e.g: `map`), it will return `Java Streamlet` object type and this needs to be transformed to `Scala Streamlet `object type again before exposing the user so in order to achieve this, `toScalaStreamlet` func",2018-02-27 07:29:31,feedback,-1,11
992335,"`Sink` exposes the following functions(`setup, put and cleanup`) as _public_ and other logics which are covered internally are managed and exposed to low level Topology API by these functions. (e.g: `com.twitter.heron.streamlet.impl.sinks.ComplexSink` jus",2018-02-27 07:25:40,response,0,10
992335,"`Builder, Streamlet, Source, Sink` Traits are the main interfaces for Scala API and `ScalaToJavaConverter` is common container for these traits.",2018-02-27 07:12:12,response,0,11
138807,Yes I was saying I would like this checked in so that I can add those functions that you are describing,2018-02-28 12:11:20,suggestion,-1,10
13649525," private static final String CONFIRMED_YES = ""y"";
,
return CONFIRMED_YES.equalsIgnoreCase(userInput);
",2018-02-22 14:18:08,suggestion,0,10
13649525,"return null sometimes will cause an additional null check logic when using this method.
In the effective java design pattern, it should always avoid returning null.
Or you can return an empty object or initial the object at the very beginning.
ag, I do",2018-02-22 14:55:57,suggestion,-1,10
13649525,"try to avoid if else or if if, maybe single statement is a little bit clear. But I am not sure the entire logic, I could be wrong.

```
Boolean hasNotConfirmedWithUser = ""prompt"".equalsIgnoreCase(Context.updatePrompt(config)) && !hasConfirmedWithUser(c",2018-02-22 14:49:23,suggestion,-1,5
13649525,"```
private static final String CONFIRMED_YES = ""y"";
,
return CONFIRMED_YES.equalsIgnoreCase(userInput);
```",2018-02-22 14:18:50,suggestion,0,10
13649525,"I'd prefer to use the name pattern like ""hasConfirmedWithUser(int newContainerCount )"", but it is up to you",2018-02-22 14:20:59,suggestion,-1,2
32022953,updated,2018-02-23 00:05:51,response,0,13
32022953,updated,2018-02-23 00:06:02,response,0,13
32022953,updated,2018-02-23 00:06:08,response,0,13
32022953,updated,2018-02-23 00:05:56,response,0,13
3200023,"why ""if parsed_args.jvm_remote_debugger_ports""? typo?",2018-02-24 08:47:47,response,-3,1
3200023,do we need a default value?,2018-02-24 08:48:49,response,-1,7
32022953,"typo, updated",2018-02-24 10:21:40,response,0,13
32022953,there is a default value in Key.java,2018-02-24 10:21:29,response,0,10
3201045,@erenavsarogullari - instead of forward slash - can you use Java Path class - to keep it more generic?,2018-02-28 06:09:29,suggestion,-2,1
992335,"Sure, will be addressing.",2018-02-28 08:05:05,response,1,13
3201045,"Spelling mistake - it should be ""topology id""",2018-03-10 14:40:32,response,-1,1
3201045,@nwangtw - why is the validation code removed?,2018-03-10 14:38:54,response,-1,3
3200023,"This is not a typo. 'topologyid' is the URL argument. The original error is:

LOG(ERROR) << ""topologyid not specified in the request"";

Let me add '' around it to be more readable.",2018-03-10 17:28:27,response,1,4
3200023,"Ah. Good call.

I refactored the common validations into a function and call it from all handlers. I must have missed this one. Thanks!",2018-03-10 17:26:16,response,3,5
10216235,why the check comp->has_config?,2018-03-13 01:23:37,response,0,1
10216235,same as above,2018-03-13 01:23:45,response,0,13
10216235,all new code should use std::string. sp_string is legacy,2018-03-13 01:24:38,suggestion,2,1
10216235,HandleUpdateRuntimeConfigRequest,2018-03-13 01:27:13,suggestion,0,12
10216235,tmaster_->UpdateRuntimeConfigTopology,2018-03-13 01:27:30,suggestion,-1,2
3200023,"so that in case user has a typo, topology can reject the request.",2018-03-13 07:05:34,suggestion,1,6
3200023,got it. will do.,2018-03-13 07:05:51,response,0,13
10216235,"If I read the code correctly, if a particular component doest not have a comp specific configuration initially, I wont be able to add something specific there. Why this limitation?",2018-03-13 08:42:04,feedback,-1,11
3200023,"Yeah. That is correct. This check is just for protection. I am open for other thoughts.

Here are a few cases,
- the topology has a config topology.config.1, and user can use command line tool to update the value. in case there is a typo like topolog.c",2018-03-13 12:31:26,response,3,9
3200023,I am going to use UpdateRuntimeConfig for this one.,2018-03-13 12:33:09,response,0,9
3200023,"On the other hand, we can skip the check and leave all runtime configs pass through. In addition to user mistakes, there might be some unused configs and it could be harder to track them.",2018-03-13 13:45:16,suggestion,1,9
7235147,Should we add a static util method isNotEmpty()?,2018-02-27 08:10:06,suggestion,-1,10
1575030,sure,2018-02-27 08:11:07,response,0,13
1575030,"done
",2018-02-27 08:16:03,response,0,13
13649525,"Duplicate code found here, better to have a method to reduce the code

getResponseByFile(String filePath)
```
  public Response downloadFile(final @PathParam(""file"") String file) {
    Config config = createConfig();
    String uploadDir = config.ge",2018-02-27 08:54:56,suggestion,-1,8
1575030,@fred521 thanks for point that out I have refactored the code,2018-02-27 08:59:11,response,5,8
3200023,"two questions:
1. is modifying the list at the time expected? If not, maybe a more proper fix is to solve issue in the appending code?
2. will some exit tasks and tasks on wake up being missed with copyOnWrite list?",2018-02-28 12:32:17,suggestion,-1,4
2183863,"WakeableLooper is designed not to be thread-safe; concurrent scenarios should be handled in outer logic.

If the purpose of this pull request is to support thread-safety, using this concurrent structure is not safe enough, if thinking this from an appli",2018-02-28 13:21:39,suggestion,-1,9
2183863,"IIRC, previously we could only add a task to such kind of `tasks-list` when executing tasks from it, but we could not remove a task.

On the other hand, WakeableLooper is designed not to be thread-safe; so it should be executed with only one thread.",2018-02-28 13:34:18,suggestion,-1,9
2183863,"Also, if the purpose is to avoid task-removal during execution, why not find out such code snippets and correct them?",2018-02-28 13:45:36,suggestion,-3,4
1575030,"@maosongfu The code snippet of the task that clears the tasksOnWakeup list:

https://github.com/twitter/heron/blob/master/heron/instance/src/java/com/twitter/heron/instance/Slave.java#L113


Has to do with restoring state.",2018-02-28 13:58:26,response,0,9
3200023,"I would suggest checking == 0, like

for (int i = 0; i < s; i ++) {
      exitTasks.get(i).run();
      // in case previous task cleared the list
      if (exitTasks.size() == 0) {
        break;
      }
}		    

Another qq, no tasks would be ad",2018-03-01 06:14:12,suggestion,-1,5
1575030,Though is checking tasksOnWakeup.size() <= i more defensive programming?  With this check an index out of bounds exception cannot happen while for some reason or another not all the tasks are cleared you can get into a situation where i > list size causin,2018-03-01 14:57:05,response,-1,10
2183863,"Based on the comment above: `We pre-get the size to avoid execute the tasks added during execution`

Will we encounter the scenario: remove a task and then add a task -> we would execute the tasks added during this round of execution? Otherwise, not sur",2018-03-01 15:33:44,response,-1,11
1575030,This won't happen during the state restore since I just add the locks which will prevent new tasks from being add during the state restore.  And its only during the state restore that we clear the tasks,2018-03-01 16:08:34,response,-2,11
3200023,"it is more defensive, but confusing mathematically.

In fact I dont like either of them because it is not ideal to check the size an array when it can change.

Another option is to change the interface:
task.run() should return a boolean value indica",2018-03-03 03:25:32,suggestion,-1,11
3200023,"I think we need to answer two questions beforehand:
- where the tasks are added?
- when can tasks be added?",2018-03-03 03:25:22,response,-2,11
3200023,"It seems that it is possible and allowed to add new tasks when the array is being executed. :(

but i think the new tasks added by the tasks before restore should be cleared too. So the clear() call is still correct.",2018-03-03 03:29:52,response,-2,11
3200023,"QQ: Can tasks be added by other thread?

If they can, then there might be a racing condition.
the existing tasks are being cleared, and a new package is received and some tasks might be added. A lock flag is not enough and we have to sync up the two th",2018-03-03 03:39:47,response,0,11
3200023,"If we want to use this lock, it needs to be an atomicBoolean, or needs to be volatile.

my concern is that simple boolean might have code cache and can be inconsistent between threads.",2018-03-03 03:34:56,feedback,-1,9
3200023,"maybe better for the two flags to be initialized in constructor?

Another suggest is to rename to clearTasksOnWakeupFlag to avoid variable and function sharing the same name. Maybe not a big deal. Your call.",2018-03-06 17:34:55,suggestion,-1,2
3200023,"is it guaranteed that the clear() function is called in the same thread? the concern is that if the clear() function is called in a different thread, it might be called after the if() check and you can still get the wrong index error. Since this object mi",2018-03-06 17:25:57,response,-1,9
1575030,"I have checked all code paths.  Ya I can confirm clear() is always called from the same thread.  I don't know how we can make nExit, executeTasksOnWakeup, clearTasksOnWakeup and clearExitTasks synchronized.  This would give rise to deadlock situations sin",2018-03-07 03:54:21,response,0,9
3200023,I was thinking of simply adding synchronized keyword to these functions. I believe Java synchronized blocks in Java are reentrant so it is not a deadlock.,2018-03-07 04:52:06,suggestion,-1,9
1575030,"I see what you are saying, but should we add them? It gives a developer the sense that these operations are thread safe now.  Should we even allow that in the architecture.  I think that is a bigger discussion. I can't think of a use case for that now.  I",2018-03-07 05:02:41,response,1,9
1575030,I have renamed,2018-03-07 05:02:53,response,0,2
2183863,"Can we add comments for `terminateAllTasksOnWakeup ` and `terminateAllExitTasks `? Though I can understand them after I go through the code, it is still better to have more comments.",2018-03-07 05:59:26,suggestion,-2,3
2183863,"Can you remove this comment (and similar comments below), and add comments at the head to declare:
1. Most methods except the `onExit()` are not thread-safe.
2. People should handle the concurrent scenarios in their business logic rather than in this cl",2018-03-07 06:03:13,suggestion,-2,3
3201045,just use component_parallelism instead of component_parallelisms,2018-03-10 14:57:07,suggestion,-2,2
3201045,use vector<string> and no need to allocate memory.,2018-03-10 14:52:27,suggestion,-1,11
3201045,@nwangtw - what happens if both the update component parallelism and also user run time config is provided simultaneously.,2018-03-10 14:48:20,response,0,9
3201045,leave it as component_name - so that it is informative.,2018-03-10 14:58:37,suggestion,-1,2
3201045,This seems to be the case across the board.,2018-03-10 15:00:04,response,0,13
3200023,"? why not import them? SerializablePredicate, SerializableConsumer, Sink, Context?",2018-03-03 07:38:47,suggestion,-3,1
3200023,import,2018-03-03 07:40:47,suggestion,-1,1
992335,"@nwangtw Firstly, thanks for the review.

Updated by using multi import. Just an exceptional point here: Scala API supports own `Sink Trait` via `com.twitter.heron.streamlet.scala` package so `toJavaSink` function needs to have Java Sink package definit",2018-03-05 04:35:57,response,3,9
992335,Addressed.,2018-03-05 04:36:19,response,0,13
3200023,use import to avoid full path,2018-03-06 15:06:22,suggestion,-2,1
3200023,"Ideally we should support this syntax.

.map[String] { num: Double =>
  (num * 10).toString
}

Not a blocker for now. We can add this support in the next version.",2018-03-06 15:09:18,suggestion,-1,9
3200023,Clean up the full package path com.twitter.heron.streamlet.impl.streamlets,2018-03-06 15:10:05,suggestion,-2,1
3200023,to import,2018-03-07 13:55:30,suggestion,-1,1
3200023,to import,2018-03-07 13:55:03,suggestion,-1,1
3200023,to import,2018-03-07 13:55:22,suggestion,-1,1
3200023,to import,2018-03-07 13:55:17,suggestion,-1,1
3200023,to import,2018-03-07 13:55:26,suggestion,-1,1
138807,why was this change needed,2018-03-08 04:32:48,response,-3,13
138807,can this become an perf issue if the number of clones are high?,2018-03-08 04:33:54,response,-1,4
992335,"Scala Functions support `contravariant`(parameter type) and `covariance`(return type) type parameters as default as follows :

From `scala.Function1` source code:
```
trait Function1[-T1, +R] extends scala.AnyRef {
 this : scala.Function1[T1, R] =>
",2018-03-09 06:26:36,suggestion,0,10
992335,"Currently, there is no limitation about the `number of clones` and `number of partitions`. I think limitation can be useful as long-term by getting team-agreement first and putting Java tier.",2018-03-09 06:27:47,feedback,-1,10
3200023,"suggest to rename to fromJavaStreamlet(). The current class is streamlet.scala.impl. StreamletImpl, so I feel fromJavaStreamlet() makes more sense.",2018-03-10 15:56:53,suggestion,1,2
992335,@nwangtw Thanks again for the review. Addressed.,2018-03-11 07:17:06,response,2,13
3200023,Just want to double check. I think the new build targets are heron.tar.gz and heron-install.sh and I am wondering if these lines need to be updated as well.,2018-03-08 09:25:39,suggestion,0,9
3201045,@ajorgensen - yes we have only heron.tar.gz and heron-install.sh -- please update the PR.,2018-03-10 14:36:05,suggestion,2,3
3200023,no need for the full path,2018-03-08 05:55:50,suggestion,-2,1
3200023,no need for the full path,2018-03-08 05:55:21,suggestion,-2,1
3200023,no need for the full path,2018-03-08 05:54:28,suggestion,-2,1
992335,@nwangtw Thanks for the review. Scala API has own `SerializabLeTransformer` and `Sink` Traits. They need to be transformed to their Java versions before passing to Java API. This class covers this transformation functions and same named classes living in ,2018-03-08 06:07:53,response,3,9
992335,"@nwangtw Thanks for the comment. Yep, alias make sense and addressed with new commit.",2018-03-09 05:59:11,response,0,13
3200023,"I see.

I think you may consider using alias like:

import com.twitter.heron.streamlet.{SerializableTransformer => JavaSerializableTransformer}
import com.twitter.heron.streamlet.scala.SerializableTransformer

",2018-03-08 09:30:32,suggestion,-1,1
3200023,"add ""@return""",2018-03-09 04:40:49,suggestion,-2,1
3200023,"""override def get()"" to be consistent",2018-03-09 04:45:17,suggestion,-2,1
3200023,maybe better parameter name,2018-03-09 04:40:04,suggestion,-2,2
3200023,test data generation as well.,2018-03-09 04:50:40,response,-2,2
3200023,"""override def get()"" to be consistent",2018-03-09 04:45:23,suggestion,-2,1
3200023,test data generation as well.,2018-03-09 04:50:01,response,-2,2
3200023,"""override def get()"" to be consistent",2018-03-09 04:51:35,suggestion,-2,1
3200023,clean up empty lines,2018-03-09 04:46:03,suggestion,-2,1
3200023,to remove or to implement?,2018-03-09 04:43:58,response,-2,3
3200023,"suggest to use import alias.

import com.twitter.heron.streamlet.{Source => JavaSource}",2018-03-09 04:42:46,suggestion,-2,1
3200023,"""scala.collection.JavaConverters."" is not necessary.",2018-03-09 04:41:52,response,-3,7
3200023,use import alias.,2018-03-09 04:47:20,suggestion,-2,1
3200023,this is expected?,2018-03-09 04:40:14,response,-2,3
3200023,??,2018-03-09 04:46:13,response,-2,13
3200023,"This function name ""toScalaStreamlet"" seems to be a bit misleading. ""fromJavaStreamlet"" might be better?",2018-03-09 04:47:53,suggestion,-2,2
138807,Done,2018-03-09 05:43:49,response,0,13
138807,"sourceFn stands for source function, what better name were you thinking about?",2018-03-09 05:47:47,response,-2,2
138807,Done,2018-03-09 05:44:03,response,0,13
138807,"It is actually, I noticed that I was getting compilation errors if I didnt include this even though I had the appropriate import statement",2018-03-09 05:48:13,response,-1,4
138807,I removed this class as its no longer needed,2018-03-09 05:43:24,response,-1,7
138807,"I will leave it as is, this is a nice to have that I can put in once we make deeper changes, right now lets focus on getting Builder operational",2018-03-09 05:49:25,response,3,8
138807,See my comment above,2018-03-09 05:49:35,response,0,13
138807,"Done, see newest checkin",2018-03-09 05:50:43,response,0,13
138807,"Done as well, see newest checkin",2018-03-09 05:50:58,response,0,13
138807,Removed,2018-03-09 05:50:32,response,0,13
138807,Done,2018-03-09 05:51:04,response,0,13
138807,Will rename in a later commit,2018-03-09 05:55:09,response,-1,2
3201045,@nwangtw - if the intention is to convert to - toScalaStreamlet - that will be fine.,2018-03-10 00:01:27,feedback,1,8
3201045,@skanjila - any idea why the compilation errors occurred?,2018-03-10 00:02:21,response,-1,4
138807,Yes that is indeed the intention,2018-03-10 02:09:16,response,1,13
138807,I will dig into that issue on the next commit,2018-03-10 02:17:52,response,0,13
992335,"Scala Builder needs to pass Java Builder instance via constructor as follows. 
```
object Builder {
  def newBuilder(): Builder =
    new BuilderImpl(com.twitter.heron.streamlet.Builder.newBuilder())
}
```",2018-03-10 03:45:30,suggestion,-1,10
138807,"actually it doesnt , if you look at the overridden methods they dont use the java builder object at all , instead they create a Java source and/or supplier object and convert that to a scala streamlet, I dont see an immediate value to using the Java Build",2018-03-10 03:52:03,feedback,-3,10
992335,"Currently, Java Source is accepted and return type Java Streamlet. However, this is Scala Builder Trait so `Java Source` and `Streamlet` should not be `return types` so following import needs to be removed.
```
import com.twitter.heron.streamlet.{Source",2018-03-10 03:47:50,feedback,-1,10
992335,"This is Scala Streamlet Trait and return types are itself(Scala Streamlet), not Java one so `Streamlet` needs to be removed.  ",2018-03-10 03:54:09,feedback,-1,10
992335,"BuilderImpl level, we need to call Java Builder `` functions. Currently, Java BuilderImpl creates a `List<StreamletImpl<?>> sources` and keeps `Sources, Transformations and Sink` to build `topology` so this is why important and for example, this function ",2018-03-10 04:10:04,feedback,0,10
992335,"`BuilderImpl` needs to get `Java Builder` via constructor as follows.
```
BuilderImpl(builder: com.twitter.heron.streamlet.Builder)
```",2018-03-10 04:03:25,feedback,0,10
992335,"Yep, this function transform `Java Streamlet` to `Scala Streamlet` version so why its naming convention is `toScalaSource`. Also, it is same convention what Scala currently has (i.e: `toList`, `toMap` etc..) ",2018-03-10 04:25:49,response,1,3
138807,Removed,2018-03-10 05:12:56,response,0,13
138807,Changed for both methods to leverage java builder,2018-03-10 05:13:14,response,0,13
138807,Changed,2018-03-10 05:28:17,response,0,13
138807,Changed,2018-03-10 05:28:23,response,0,13
3200023,Function signature doesn't match comment.,2018-03-10 16:08:44,response,-1,2
3200023,"hmm. interesting. another note is that ""asJavaCollectionConverter(...).asJavaCollection"" looks a bit strange. from function name, it seems asJavaCollectionConverter(...) should return a Java collection, hence the following asJavaCollection looks a bit con",2018-03-10 16:12:34,feedback,0,2
3200023,Please use import alias instead of full path,2018-03-10 16:10:03,suggestion,2,3
3200023,"Suggest to use alias,

import com.twitter.heron.streamlet.{Builder => JavaBuilder}
...
    new BuilderImpl(JavaBuilder.newBuilder())
",2018-03-10 16:06:22,suggestion,0,3
3200023,Suggest to use import alias,2018-03-10 16:14:49,suggestion,-1,3
3200023,description seems to be wrong.,2018-03-10 16:15:57,feedback,-1,1
3200023,sort imports,2018-03-10 16:16:23,suggestion,-1,1
138807,"I believe this just takes an input collection and converts it to a Java collection, again I will dig into this as well on the next commit to simplify this, here's the issue I created to track the import alias issue and this: https://github.com/twitter/her",2018-03-12 22:02:33,response,0,3
13649525,"Curious why you not using java-> java.util.concurrent.atomic.AtomicLong package, it is thread safe with better performance.

synchronized with the method which makes the code single thread only even there are multiple threads running.

",2018-03-12 23:32:48,feedback,1,9
3200023,missing incr()?,2018-03-13 00:36:13,response,-1,7
3200023,missing incr()?,2018-03-13 00:36:25,response,-1,7
3200023,"Might be safer to be in this order?

looper.exitLoop();
metricsMgrClient.stop();
outMetricsQueues.clear();",2018-03-13 00:37:13,suggestion,0,5
3200023,missing incr()?,2018-03-13 00:36:19,response,-1,7
3200023,sort,2018-03-10 18:12:45,suggestion,-2,1
32022953,done,2018-03-13 02:56:15,response,0,13
32022953,done,2018-03-13 02:56:24,response,0,13
32022953,done,2018-03-13 02:56:20,response,0,13
32022953,done,2018-03-13 02:56:29,response,0,13
32022953,done,2018-03-13 02:56:36,response,0,13
32022953,"I just wanted to reuse the existing CountMetric, however CountMetric does not have atomic interface",2018-03-13 02:57:48,response,0,11
1575030,"do we need .replace(""="", ""&equals;"")) here?  All the ""="" would already be replaced by the previous replace statement right?",2018-03-16 11:45:34,feedback,1,1
1575030,"can we add a comment on why we need to replace ""="" for future reference",2018-03-16 11:46:35,suggestion,0,3
3200023,"right. Technically it is not really necessary.

I left it here to be consistent with the decoding path and easier (just a little) for people to understand. In future we can remove both of them at the same time.",2018-03-16 11:50:45,response,-1,1
1575030,gotcha can we just add some comments at the places this is done for future reference.  Thanks!,2018-03-16 11:52:25,response,3,3
1575030,or maybe a TODO for the future,2018-03-16 11:52:43,suggestion,0,2
3200023,Sure. added.,2018-03-16 12:00:01,response,0,13
3200023,"Thinking about it again. Now I don't think leaving the encoding part here is very helpful. Plus it looks wrong and could cause more confusion. I am removing this replace() call in the new update.

It is also easier to tell that the decode() part is for ",2018-03-16 15:16:02,feedback,0,1
3200023,sort,2018-03-19 07:14:00,suggestion,-2,1
3200023,remove ths empty line,2018-03-19 07:14:49,suggestion,-1,1
3200023,clean up?,2018-03-19 07:14:32,suggestion,-1,1
1575030,why are we doing this?,2018-03-21 03:52:14,response,-4,13
1575030,how can index but less than 0?,2018-03-21 03:52:25,response,-1,11
10216235,"hashCode can return negative numbers. % according to spec can be negative if dividend is negative(it really is implementation specific, but looks like atleast some versions of jvm return negative).",2018-03-21 05:52:06,response,0,11
3200023,"First of all, what is the impact? This could cause crashing? or bad results?

This line is a bit redundant. Just notes, not a blocker.

(index + taskIds.size()) % taskIds.size()
or 
if (index) {
  index = index + taskIds.size();
}

should be eno",2018-03-21 13:34:28,fedeback,-2,10
10216235,"The issue is that if index is negative, list.get(index) fails.",2018-03-21 20:39:50,feedback,-1,4
1575030,"Math.abs(hash). This can also give you negative numbers when hash is bigger than 2^31, and the best way would be to use a shift mask (key.hashCode() & 0x7fffffff) % M, where M is the table size.",2018-03-23 01:30:02,response,2,10
3200023,"Math.abs(hash) can give negative result? Sounds strange to me.

bitmask is dangerous because it assumes the var is 32 bits. In case someone changed the data type it can cause other problem.",2018-03-24 04:54:39,response,-3,4
3200023,do we need to add the same logic in c++ and python?,2018-03-22 13:08:38,response,-1,10
10216235,"@nwangtw Good catch!
It looks like python already does this but c++ doesn't. I've added that logic as well.",2018-03-23 01:29:18,response,5,9
6377806,"Is this statement accurate: all instances of a component together will get this amount of RAM, be default? For e.g. if a comp C has instance i1 and i2 and default RAM is 2 GB, i1 will be assigned 1GB of ram.

On the other hand, if this is instance defau",2018-03-22 23:22:06,response,0,9
3201045,@ashvina - this default is for all instances for a particular topology. if your instance needs more memory - you can override using setComponentRam - which is the next PR that will be coming up. ,2018-03-23 00:35:26,suggestion,-1,9
3200023,"yeah. the existing ones, instance.cpu, etc are heron internal configs for all topologies
the new ones here, component.default.cpu, etc are for users to set/config for all instances in each topology.
the future ones will be for each component.",2018-03-23 00:56:07,response,0,9
6377806,"@kramasamy @nwangtw 
I am a bit confused. 
1. The config name is `COMPONENT_DEFAULT`, but it is use to configure `INSTANCE_DEFAULT`. Should this be renamed? 
1. Why are we replacing existing configs for cpu and disk, `heron.resources.instance.cpu` and ",2018-03-23 01:14:30,suggestion,-3,2
3200023,"1. It is a good question. I think both makes sense, in a different way. If you consider the next step, per component resource config, component_default makes more sense. If you consider that all instances are using the config as default value, instance_de",2018-03-23 02:03:19,response,2,11
3200023,I am wondering if the change in this file is expected/needed in this PR. it seems unrelated and looks a little strange.,2018-03-23 01:12:53,suggestion,-1,1
3201045,good catch it is not needed.,2018-03-23 01:13:53,response,1,7
3201045,"@nwangtw - i need to take my comment back. this is needed to ensure all linux variants are grouped under one target which is k8 - otherwise, it is ubuntu, centos and more variations.",2018-03-23 02:56:40,response,-1,9
3200023,I see. So now k8 is considered as a platform? A little unclear but not a blocker to me.,2018-03-23 03:22:32,response,-1,1
3201045,@jerrypeng - is this needed for 'nomad' direct deployment?,2018-03-24 23:31:54,response,-2,7
1575030,no this is for API server,2018-03-25 00:47:16,response,-1,6
3201045,ok got it - let us fix the CI and merge it.,2018-03-25 00:48:32,response,1,13
3200023,"not effecient. Why not just use:
case x if (x >=0 && x <= 99) => x / 20 + 1
case _ => throw",2018-03-27 00:14:30,suggestion,-3,7
3200023,use default arguments directly,2018-03-27 00:10:07,suggestion,-2,10
3200023,Same as above. Suggest to break the pipe to two steps.,2018-03-27 00:12:48,suggestion,-1,1
3200023,same as above.,2018-03-27 00:14:56,response,0,13
3200023,"suggest to break this code into two steps to be more readable
1. create musicSource1
2. musicSource1.filter(...).....",2018-03-27 00:12:02,suggestion,-1,1
992335,`Kryo` needs explicit defined `no-arg constructor` for Serialization so this has been added for it,2018-03-27 17:27:58,feedback,0,6
3200023,suggest to move this above musicSource2. :)  not a blocker,2018-03-28 06:53:19,suggestion,2,5
3200023,got it. kk then.,2018-03-28 06:52:45,response,3,13
1575030,Thanks for adding these checks.  We need to add these checks all around in Heron.  We currently lack any sort of organized config validation,2018-03-29 00:58:56,suggestion,2,12
992335,"@jerrypeng Yes, exactly. Thanks for review ;)",2018-03-29 01:06:55,response,4,13
1575030,"I created a config validation system using annotations in storm back in the day:

https://github.com/apache/storm/blob/master/storm-client/src/jvm/org/apache/storm/Config.java

Perhaps worthwhile to think if its worth while to have in Heron.  Though i",2018-03-29 01:18:35,response,0,9
7235147,"what about no short name or ""rc""? 

Also instead of doing a list you can do something like this
final Option property = Option.builder(""rc"")
        .argName(""comp:property=value"")
        .numberOfArgs(2)
        .valueSeparator()
        .desc(""u",2018-03-29 05:40:30,suggestion,-2,2
3200023,sounds good! Didn't even thinking about two characters. :D,2018-03-29 06:29:12,response,6,13
3200023,"We do want to keep the current format though to be consistent to component_parallelism.

[comp:]<name>:<value>,[comp:]<name>:<value>,.....

The number of component can be infinity, not really 2.

This is the argument for scheduler, not the CLI argum",2018-03-29 06:34:57,feedback,0,9
10141051,"nitpick: why did you remove `__attribute__((const))` from this function, but not from `TLSLogChannelApplicationDefault()` just below ?  don't they both return references to `NSString * const` internally?",2018-08-28 10:08:27,response,1,10
2011749,"So, the issue is that `TLSLogLevelToString` was updated to provide a debug string when an invalid level is provided which is dynamically created (not const) and thus if you provide an invalid level you risk crashing from compiler optimization.  It's super",2018-08-28 22:04:49,feedback,2,4
2215690,can you align indents with existing style?,2018-01-29 10:47:15,suggestion,-2,1
2003669,"My bad, IntelliJ decided to be fancy.  
Updated the pull request.",2018-01-29 12:11:51,response,1,9
2215690,same for this function also,2018-01-29 14:51:19,suggestion,-1,10
2215690,"some lines are too long now, please keep below 120 chars per line",2018-01-29 14:50:43,suggestion,-2,1
2003669,Done.,2018-01-30 00:04:29,response,0,13
2003669,Done,2018-01-30 00:04:36,response,0,13
12243029,"This isn't necessarily an edge filter, but a node filter instead. If there are new engagements to an old tweet, it would be filtered out because the tweet itself is too old. I believe you are either looking for RecentTweetFilter through filterChain, or th",2018-04-04 03:08:30,suggestion,0,10
12243029,"The new graph type does not actually add authorId information, is it missing a commit?
",2018-04-04 03:37:39,response,-1,13
12243029,nit: update comment,2018-05-05 04:01:45,suggestion,-2,3
12243029,"nit: this is actually the size of compressed metadata. Might as well call it ""compressed""/""packed""MetadataSize to avoid confusion",2018-05-05 04:50:01,suggestion,-2,2
12243029,"We should have a TODO item to consolidate the edge types into one file. Currently this is scattered into several places (tweet/TopSecondDegreeByCountForTweet, tweetfeature/TopSecondDegreeByCountForTweet, and here), which might pose problems in the future",2018-05-05 05:06:40,suggestion,-1,4
12243029,"Nit: In addition to the gotchas, would be nice to document the compression mechanism we are using here as well, i.e the schema of mutable features and immutable features in the int array, for clarity purposes",2018-05-05 04:55:59,suggestion,-2,3
12243029,"Essentially, this function does more than just one thing - iterate all segments to retrieve feature counts, populate the metadata array, and lastly set immutable features. If they need to live inside one function, could we make these actions clear in the ",2018-05-04 00:43:30,suggestion,-1,10
12105170,"This getLeftNodeEdges in the for loop is an expensive step. What it does is to retrieve all the engagements for a user, and since it happens inside a for loop, it will retrieve all the engagements for all users specified in tweetAuthors.

One alternativ",2018-05-31 00:18:08,suggestion,0,7
12243029,"The performance concern is totally fair, I had similar thoughts on this. However, combing the 2 filters feels a bit hacky, as the author sets for whitelist and blacklist could be different. I think it is the caller's responsibility to acknowledge the cost",2018-05-31 01:19:41,response,1,7
6922330,"let us query for blacklist tweets only when whitelist is empty. Otherwise, we are querying for blacklist tweets all the time.",2018-06-01 03:28:48,suggestion,0,7
12105170,could you add more comments on why this change is necessary?,2018-09-19 03:58:43,response,0,3
12105170,complete comments?,2018-09-21 01:11:27,response,-2,3
12105170,"Generally speaking, we should avoid creating request object inside an algorithm. The request is the input, and the underlying algorithm could parse it and convert it to something else internal, but rewriting requests is not a good idea.

In this case, d",2018-10-05 05:34:55,feedback,1,6
12243029,"Agree, yes in this case we just need to find a way to squeeze in the unfavorite social proof types into the algorithm. 
I did it this way to decouple the unfavorite logic from the remainder of the class logic, though now thinking back I agree this is mor",2018-10-05 05:53:50,response,0,11
8562599,"Ah thanks! Do you mind adding the `@NotNull` annotations as well, for consistency?",2018-03-29 14:01:19,suggestion,2,1
6570061,"oh,I'll check it.",2018-03-29 14:02:36,response,0,13
1614541,Would add one more TODO about moving some of this boilerplate response struct generation into a function later,2018-01-04 05:58:39,suggestion,-1,8
1614541,what's this for?,2018-01-04 06:00:50,response,0,3
8324668,"just to explicitly differentiate responses dependent on request, it isn't necessary at all.",2018-01-04 06:04:00,suggestion,-2,7
8324668,Are there any particular internal modifications you think are likely to be necessary?,2018-01-08 23:42:35,response,0,3
8324668,"""worker will retrieve Command""
How? From where?",2018-01-08 23:51:09,response,-2,3
8324668,"Could you structure this log to make it more easily searchable?
  ",2018-01-08 23:49:55,suggestion,-1,1
8324668,"Somewhat obvious, but could you link e.g. https://godoc.org/google.golang.org/genproto/googleapis/devtools/remoteexecution/v1test#Digest next to struct declarations to clarify their origin ",2018-01-08 23:48:54,suggestion,-1,3
1614541,Sure will add,2018-01-09 00:15:26,response,0,13
1614541,"Worker will retrieve the command from the CAS, will make comment more clear",2018-01-09 00:16:36,suggestion,0,3
1614541,"Not really, if anything it gives us a type alias and potentially protects from changes in googleapis struct",2018-01-09 00:15:04,response,0,11
1614541,Sure,2018-01-09 00:15:35,response,0,13
8324668,"I wonder if those are worth the slight complexity add. I don't have a strong opinion either way, up to you.",2018-01-09 00:34:03,suggestion,-1,7
8324668,Note to self: Change this comment before merging,2018-01-11 06:13:29,suggestion,0,3
8324668,Note to self: Change this comment before merging,2018-01-11 10:41:57,suggestion,0,3
1614541,package_prefix,2018-01-11 23:47:24,response,0,11
1614541,Why the '_'?,2018-01-11 23:41:51,response,-2,1
1614541,"I just added this for runner.Commands (see runner/runner.go - doesn't add anything when nil), that's what the String() funcs in bazelapi are for",2018-01-11 23:38:20,response,0,10
1614541,"package_prefix

ugh, maybe we should just reference the Makefile target in these comments so we have a canonical source of truth and generation method?",2018-01-11 23:48:17,suggestion,-3,3
1614541,package_prefix,2018-01-11 23:46:44,response,0,11
8324668,Not sure - that's what the thrift generated,2018-01-11 23:52:54,response,0,13
8324668,"yeah, I think that's a good call",2018-01-11 23:53:43,response,4,13
8324668,"Gotcha. The duplication of fields is a little weird though. There ends up being 2 ExitCodes and a StdoutRef, StdoutDigest, and StdoutRaw (+ errs) for a RunStatus with an ActionResult",2018-01-11 23:56:52,response,-1,1
1614541,Sure - could add an additional short/truncated string function to bazelapi and use that here,2018-01-12 00:01:20,suggestion,0,10
912560,It's not immediately clear what this is used for.,2018-01-18 01:14:56,response,-2,3
8324668,*server,2018-01-18 00:35:45,suggestion,-1,13
8324668,"Don't need to specify, 0 will be the default value. Think a constant would be good here though",2018-01-18 00:33:25,suggestion,-1,7
8324668,Would be nice to have a GetReadResourceNameDefault that doesn't take an instance or fname,2018-01-18 00:23:20,suggestion,-2,10
8324668,"It looks like we aren't doing anything with context.Background(), why not use grpc.Dial(serverAddr)?",2018-01-18 00:40:02,suggestion,-2,10
1614541,this was useless; removed,2018-01-19 01:11:17,response,-6,13
1614541,"yep, done",2018-01-19 01:11:24,response,0,13
1614541,done,2018-01-19 01:11:29,response,0,13
8324668,"Will this work if we have multiple filers with IDC's? E.g. the first x to return error, and the last to return is successful, then I think initErr will be nil.",2018-01-23 00:42:26,response,0,10
1614541,"initErr only gets set if the IDC returned a non-nil error, so although it can get overwritten, it can't get overwritten with nil (and we log all the individual failures)",2018-01-23 01:36:53,respones,-1,10
1614541,This has to be broken up because of the way some of our tests and implementations are - they expect if no IDC was given the controller will be available immediately after the constructor returns (this will fail race detector tests). We could make those im,2018-01-23 01:39:42,suggestion,-1,10
8324668,*in,2018-01-23 02:44:31,response,0,13
8324668,ah yep you're right - missed that,2018-01-23 02:47:40,response,0,13
912560,"Remind me, what is fname for and why is it optional?",2018-01-23 04:58:10,response,-2,3
912560,Truncated,2018-01-23 04:51:22,response,0,13
912560,Can't you just close the ch once here?,2018-01-23 05:25:59,suggestion,-4,5
912560,Does this actually accomplish #3 above?,2018-01-20 06:53:53,response,-2,13
912560,"How does the rest of cmd get filled, ex: priority?",2018-01-20 07:04:57,response,-1,3
912560,nit - should this happen in the caller instead?,2018-01-20 06:59:44,suggestion,-1,8
912560,"All this locking stuff seems unwieldy, I can't easily tell if it's necessary. It seems like you can just use yet another channel and send it the run type every time the respective ticker updates.",2018-01-23 05:32:57,suggestion,-3,7
912560,Is there another method that users would expect?,2018-01-20 08:04:02,response,0,10
912560,"A little late for this comment, but why is this considered a runner?",2018-01-23 05:21:11,response,-2,3
912560,This doesn't seem like an accurate description.,2018-01-23 05:04:05,response,-3,3
912560,Doesn't seem like a useful default.,2018-01-20 05:23:57,response,-3,7
1614541,"yes, the hand of grpc/protobuf is merciful and kind. I might update this later to data: ' ' (nothing w/ length 1) as it still works, and certain underlying internal blob stores do not accept 0 length",2018-01-23 23:10:34,response,0,11
1614541,removing. I guess I had in mind some of the other scoot semantics for Stores that try to transparently support local alternatives,2018-01-23 23:18:15,response,0,11
1614541,part of the Bazel API spec - described in remote_execution.proto in the description of the ContentAddressableStore service. there is a fair amount of subtlety described in the API this way  https://github.com/googleapis/googleapis/blob/master/google/devto,2018-01-23 23:20:13,response,0,11
1614541,updating,2018-01-23 23:24:05,response,0,13
1614541,The handler in bazel/execution/service.go:execReqToScoot does this. The only things unavailable at that level are the argv/env vars. Adding comments to execReqToScoot,2018-01-23 23:29:17,response,0,3
1614541,"makes sense, will move",2018-01-23 23:29:25,response,2,8
912560,"Ugh, I'm not a fan of this api. Could you elaborate a little in the github comments about our interpretation of: 

""the client MAY reuse the `uuid` for uploading
// different blobs. The `resource_name` may optionally have a trailing filename
// (or ot",2018-01-23 23:29:47,suggestion,-6,3
1614541,"runs underlying bazel operations... I'm open to other suggestions here, this would be easy to change. BzTreeer? BzFs? etc",2018-01-23 23:43:07,response,2,10
145409,"FWIW as of https://github.com/pantsbuild/pants/pull/5378

`fs_util --local-store-path=/Users/dwagnerhall/tmp/store --server-address=localhost:12100 directory save --root=/ ''`

should work. I can put together a pre-release binary if you want to try it",2018-01-23 23:50:50,suggestion,1,10
1614541,"We start N updateTickers in separate goroutines, not sure how if we recv on one the others will get the message?",2018-01-23 23:54:08,response,0,10
1614541,"I'm using the lock only when tickers update the map of bool flags that indicate what filers have update requests, and then once in the loop to read & reset the flags.  To queue these up on a channel it would have to be buffered -- to what length? how do u",2018-01-23 23:58:58,response,-1,10
1614541,"oh, by certain underlying stores I mean Blobstore :) gives us an HTTP 411 for doing that",2018-01-24 00:05:46,response,3,10
1614541,"Yeah, I don't totally understand the point of the fname fragments as there is no prescribed behavior on how to use it on the server - perhaps just for logging as you indicated. Will add a comment on uuid",2018-01-24 00:07:31,suggestion,1,3
912560,"Why does it have to be buffered? They end up being processed serially right? Seems like we can do a blocking send and ultimately it doesn't matter if it gets backed up or not, although I'd expect it shouldn't with reasonable ticker times.",2018-01-24 00:48:11,suggestion,-2,10
912560,"All the goroutines will receive ""_, notOK := <-ch"" when a channel is closed afaik.",2018-01-24 00:49:33,response,-2,4
912560,"Seems confusing to reuse the term runner, anything else would be better as long as it's unique or thematically consistent.",2018-01-24 00:51:31,suggestion,-4,10
1614541,Ah yes - thanks,2018-01-24 02:24:09,response,3,13
1614541,"I think an updater could get starved out in this case, if the request channel has a request and before it's drained by the updater (some task is running and taking a while), several updaters hit their tick again and compete to make the next request. Possi",2018-01-24 02:28:39,response,0,10
912560,True. In that case I'd use a single ticker with the gcd of filer intervals and then on each tick loop through the filers seeing who all deserves a turn.,2018-01-24 02:59:52,suggestion,0,10
912560,"Up to  you though, whatever you think will be the most understandable.",2018-01-24 03:00:23,response,5,13
8324668,I wonder if it would make sense to also validate the ID in the case of a standard Scoot snapshot,2018-01-23 00:32:02,response,0,12
8324668,"I think you can just call wg.Wait(), and it will immediately pass if it was never added to (i.e. if wait was never set to true)",2018-01-23 00:41:55,suggestion,-1,10
8324668,"I think you can just have ns.node here, the %s calls String() on it",2018-01-23 05:48:42,suggestion,-1,7
912560,It's not clear to me - why did you change from logging NodeState to logging Node?  We're losing a lot of useful information by doing this.,2018-01-23 23:22:26,response,-1,10
8324668,"can just have ns.node here, %s calls String() which calls Id()",2018-01-25 01:10:08,suggestion,-2,10
8324668,"Think we still want %#v on ns, and the first %v can be a %s for ns.node instead of ns.node.Id()",2018-01-25 01:09:56,suggestion,-1,10
8324668,"can just have ns.node here, %s calls String() which calls Id()",2018-01-25 01:06:54,suggestion,-2,10
8324668,"can just have ns.node here, %s calls String() which calls Id()",2018-01-25 01:05:35,suggestion,-2,10
9795471,"fixed
",2018-01-25 02:06:50,response,0,13
9795471,fixed,2018-01-25 02:07:03,response,0,13
9795471,fixed,2018-01-25 02:07:11,response,0,13
9795471,fixed - was trying to get logging to print the wily node content instead of its address,2018-01-25 02:10:34,response,0,10
9795471,fixed and reverted to printing ns (all of nodeState),2018-01-25 02:08:25,response,0,10
9795471,fixed and reverted to using ns,2018-01-25 02:11:22,response,0,10
912560,"And what was the reason for going from #%v to %s? If I remember correctly, I changed this so it would print the field names rather than just bare values. ",2018-01-25 04:15:28,response,-1,10
9795471,"using %s trigger using ns.String() which prints the host name, shard id as well as the IP address from update.Node.  ns.String() prints field name as well as values.  The big difference is that it does not print readyCh nor removedCh.
You can see the dif",2018-01-25 04:30:48,response,0,10
9795471,"Can we print what type the filer was? 
fmt.Errorf(""postProcessBazel() expected filer to be a BzFiler, instead it was %s"", reflect.TypeOf(filer))
",2018-02-01 00:43:14,suggestion,-2,1
9795471,"put 'skipping' on the error message.
",2018-02-01 00:52:29,suggestion,-1,4
9795471,just curious.... this doesn't really abort the ingest does it?,2018-02-01 01:21:04,response,-2,10
9795471,"continuing error handling comment from above.....
this is where we would put the stack trace on the error (see github.com/pkg/errors - already in vendors)",2018-02-01 00:49:31,suggestion,0,4
9795471,"put 'is' in the message: ""Expected output file %s is not a regular file""",2018-02-01 01:05:55,suggestion,-1,4
9795471,do we really want to remove this TODO- it seems to be a reasonable comment to me.,2018-02-01 01:09:29,suggestion,-2,13
9795471,add 'is',2018-02-01 01:07:36,suggestion,-1,1
9795471,this is a lot of code in this if block - can it be pulled into a well-named/documented function?,2018-02-01 01:15:15,suggestion,-1,8
9795471,add 'skipping',2018-02-01 01:06:58,suggestion,-1,1
9795471,"I've been thinking about our error handling.... should we include the stack trace on the initial error generation,  these sorts of 'if err != nil {}' blocks simply return the error and have the top level that finally resolves the error print the stack tra",2018-02-01 00:46:03,suggestion,-1,4
1614541,"I don't feel these TODOs about design level decisions add anything. No one is going to notice this comment and then implement its suggestion, and todo's are not an issue tracking system. IMO todos should not be checked into master branch, but I found this",2018-02-06 01:29:26,suggestion,-5,13
1614541,"It lets the worker go and do something else, but the actual ingestion keeps going (same as existing behavior)",2018-02-06 01:31:07,response,0,13
1614541,"Had thought about that. As-is I left the ""Scoot"" type behavior inline and broke out the Bazel processing. Will break some of this out into a post-process piece",2018-02-06 01:33:35,response,0,9
912560,"I agree and disagree. TODO's are useful to document things that are unintuitive, behaviorally or semantically, yet appear to work, and therefore don't warrant polluting jira. In this case, it's unlikely that anyone will ever be impacted, but you *did* not",2018-02-06 02:08:20,response,-4,13
1614541,I think this is fine w/out the note - metrics is a bigger todo tracked internally,2018-02-08 02:10:35,suggestion,0,3
1614541,"For all the errors in these top-level api-defined function, return errors only as  grpc/status.Error(<grpc/codes.Code>, ""<user-digestable message>"") since these are client-facing. see other return examples. there might be a few returns that were in here a",2018-02-08 02:12:52,suggestion,-1,4
1614541,Add Digest of the action here - I think that's the only additional EOM data required. This might be a good candidate for adding a field to the bazelapi wrapper data struct (record once in the Execute function when we initially calculate the ActionDigest a,2018-02-08 03:17:39,suggestion,0,10
1614541,Might want to move this validation and retrieval of runStatus to small function,2018-02-08 03:31:02,suggestion,-2,8
1614541,should be fine with 'normal' errors here since top-level is wrapping into a status.Error,2018-02-13 03:14:52,suggestion,-2,4
1614541,"just checking - supposed to be a ""%2B"" here or ""+""?",2018-02-13 07:17:13,response,-1,1
145409,"Technically it's a `+` in the version number, but it needs to be `%2B` in the curl command line. This seemed nicer than `pants_release_urlencoded=""$(perl -MURI::Escape -e ""print uri_escape('${pants_release}');"")""` and putting that in the `curl`s, but I ca",2018-02-13 07:37:46,response,0,9
912560,"This was resulting in double writes to the response header, which isn't allowed. (io.Copy() calls Write() which sets status=200=OK as the final header content).",2018-02-14 14:02:19,feedback,-1,4
1614541,was the 'break' a bug before?,2018-02-22 23:41:15,response,-1,4
912560,"Since new retry jobs have to match previous jobs, would could exit early before, but now we want to unconditionally iterate across all jobs with the same requestor.",2018-02-22 23:56:32,suggestion,-1,5
8324668,"Could you expand on this point? Do retries get assigned a non-unique ""retry"" tag?",2018-02-23 03:49:15,suggestion,-2,3
8324668,"nit: for all of these, can just fmt.Errorf(errstr)",2018-03-14 21:43:09,suggestion,0,4
8324668,why?,2018-03-14 21:40:40,response,-2,13
8324668,"maybe log.Errorf(Error retrieving Bazel command data: %v"")",2018-03-14 21:40:15,suggestion,1,4
8324668,ditto,2018-03-14 21:49:54,response,0,13
8324668,Is this confirmed as being part of the API spec?,2018-03-14 04:46:09,response,-1,9
8324668,curious - why this change?,2018-03-14 21:47:19,response,1,13
8324668,"nit: this main() is a little long, consider splitting into addSubcommands, addSubcommandFlags, etc.",2018-03-14 05:03:12,suggestion,2,8
8324668,Do we need to check if cmd.ExecuteRequest is nil to avoid a nil pointer dereference?,2018-03-14 21:45:54,suggestion,-1,10
8324668,"don't need this, right?",2018-03-14 21:48:48,response,-1,13
1614541,Yes - had this clarified in the Bazel API Revisions  gdoc,2018-03-15 04:37:34,response,0,10
1614541,added,2018-03-15 04:38:36,response,0,13
1614541,added a few comments and grouped flags w/ subcommands to make a bit clearer,2018-03-15 04:38:31,response,-1,1
1614541,"done, thanks",2018-03-15 04:38:45,response,0,13
1614541,"added comments here and in bazel/cas/service about returning NotFoundError. kind of an open question what the standard for errors should be - bubbling up vs wrapping in a new err, when to log, etc.",2018-03-15 04:40:53,response,1,4
1614541,"We should never hit that case, the first thing we do in the bazel workflow is check that ExecReq is non nil",2018-03-15 04:41:37,response,-2,12
1614541,We have always been testing packages during the coverage step multiple times because we are not uniq'ing between for loop iterations,2018-03-15 04:43:56,response,-2,12
1614541,"removed both, thanks",2018-03-15 04:44:07,response,2,13
8324668,gotcha - nice catch,2018-03-16 00:55:15,response,3,13
8324668,Gotcha. Think it'd still be worth using the helper method cmd.ExecuteRequest.GetActionDigest() from https://github.com/twitter/scoot/pull/362/files#diff-9776fc4ea2a6e05f737bf7c9ef6106bfR58?,2018-03-16 01:01:03,response,2,10
1614541,"ohh, yes, thanks",2018-03-16 01:07:44,response,4,13
1614541,"Worth checking here? No check in Offline request, and if for some reason the state changes between now and when the request is processed, the requestor won't know what happened anyway.",2018-03-22 20:37:17,suggestion,0,12
8324668,True - will remove.,2018-03-23 22:54:23,response,0,13
8324668,"Ah - remembered we need this check, ns is used for the add. Can put a similar check in OfflineWorker for consistency.",2018-03-23 23:02:53,suggestion,0,12
8324668,"should there be a `return nil, err` here? (for the case that `err` isn't a `*cas.NotFoundError`",2018-03-24 03:35:13,suggestion,-1,10
1614541,Nah - no reason to fail the run - we just want to log that we weren't able to check the cache (metrics to come),2018-03-24 03:40:57,response,1,1
8324668,"whoops, missed the ! in !ok",2018-03-24 03:59:29,response,0,1
1614541,"If this passes for internal use as well, could define once as a default in setup.go (or if not in default but we want to reuse, throw under common somewhere)",2018-03-29 22:04:24,suggestion,0,11
1614541,Only suggestion is returning an iota int64 type with an entry for unknown that can be returned e.g. when the func is not compatible with the os,2018-03-29 22:01:50,suggestion,0,10
8324668,Job 4 when one of those finishes?,2018-04-11 23:29:35,response,-1,13
8324668,Looks like this isn't accurate based on line 294,2018-04-11 23:35:42,response,-1,13
8324668,ditto per line 294,2018-04-11 23:36:29,response,-1,13
912560,I believe this was a recent addition of mine that is meant to handle the case where worker goes offline/online and we abort the old run. So I think we still need this but you can verify if that sounds suspect.,2018-04-12 04:15:57,response,0,4
912560,"Let's adjust these to be a little more fair, it's too easy for p0 tasks to starve when everything seems to be high priority. Maybe .15, .3, .55? I'd like this rewritten or at least moved to a config file but I don't think you want to do that in this PR.",2018-04-12 04:19:34,suggestion,1,11
912560,I'm not entirely sure if this is just for P3. Do you think the if-statement above is sufficient to handle the node lost case?,2018-04-12 04:25:55,response,-1,4
912560,Should this be a warn or err?,2018-04-12 04:30:10,suggestion,-1,4
1614541,"I was trusting the comment here stating that this section should only get hit in the P3 case, which would have already handled cleanup.

Assuming for a sec that this could be hit in the node lost case as well - would we want to return like this block wa",2018-04-12 23:20:44,suggestion,-1,4
1614541,"Will update, but yeah will skip a refactor here",2018-04-12 23:21:13,response,0,8
1614541,"This bool was only set in the ""if ta.running != nil"" block, and that taskAssignment.running field was only ever set in the assign() function when we went to steal a node from killableTasks. With the removal of killable tasks there's not longer an entry po",2018-04-12 23:22:37,response,-1,10
1614541,will warn,2018-04-12 23:22:52,response,0,13
912560,"On second thought, let's trust the comment at face value.

That said, I think what's bothering me is the handling of jobState.numTimesTried if a node hiccups and comes back. We may need to keep the 'preempted' arg and set it to true if the nodeId is the",2018-04-13 04:13:22,suggestion,0,4
912560,"See other comment, I may have missed an edge case in my last fix, and we may still need this.",2018-04-13 04:14:12,suggestion,0,4
8324668,`nodeReAdded = (&nodeStInstance.readyCh != &nodeSt.readyCh)` would make this _slightly_ easier to read imo,2018-04-26 02:42:27,suggestion,-2,1
8324668,Why do we need to log a start before an end?,2018-05-01 22:18:56,response,-2,3
912560,https://github.com/twitter/scoot/blob/master/saga/saga_state.go#L267,2018-05-01 23:39:47,response,0,9
8324668,Ah - would be nice if that dir had a README just to clarify what saga updates are allowed and when.,2018-05-02 01:08:56,suggestion,-1,3
8324668,nit: *curry30goat,2018-06-19 03:51:14,suggestion,-1,2
8324668,"Just a thought - setting these timing fields sprinkled throughout the codebase could end up being somewhat difficult to find. 

How would you feel about making the runTimes fields (e.g. invokeStart, invokeEnd, etc...) some custom struct with a time.Time",2018-06-19 04:43:28,suggestion,1,5
8324668,"is this supposed to be ""google.golang.org/genproto/googleapis/devtools/remoteexecution/v1test""?",2018-06-19 01:39:46,response,0,3
1614541,"yep, thanks",2018-06-19 06:20:43,response,3,13
1614541,"Yeah... I added a crude alias around time.Now that at least makes these grep-able (I guess, the only way to strictly enforce would be to break out in a separate pkg with non-exported field names). Added a note that I'd like to end up breaking the invoker ",2018-06-19 06:23:15,response,0,2
1614541,Suggest move to bazel/digest.go if making public,2018-07-17 04:37:12,suggestion,-1,5
8324668,ditto,2018-07-25 02:19:02,response,-1,13
8324668,why?,2018-07-25 02:18:34,response,-2,13
8324668,this reads a little weird... not sure how to clean it up though. maybe just a little more context in the comment as to why this isn't counted as a request failure.,2018-07-25 02:18:12,suggestion,-2,3
1614541,Dup of common/common.go:GetFirstGopath,2018-08-23 06:34:52,response,-2,7
1614541,Redundant?,2018-08-23 06:51:41,suggestion,-2,1
8324668,"thanks, missed that",2018-08-23 21:48:48,response,2,13
1614541,Let's use https://golang.org/pkg/os/#Symlink instead of exec here,2018-08-30 09:48:45,suggestion,-1,3
1614541,Does this work here? This is pre checkout in invoker - does the symlink end up in the checkout working directory for the task run? Was assuming this logic would likely live in a function here and be called immediately after the checkout channel recv<- in ,2018-08-30 09:56:42,response,0,10
1614541,"Suggest more generic prefix for errors here - ""Failed setting up platform property X: $reason"" ",2018-08-30 09:52:32,suggestion,-2,4
1614541,"Add a leading comment so 'k=v,' format is clear",2018-08-30 09:47:55,suggestion,-2,3
8324668,"Nope you're right, totally missed that. Good catch.",2018-08-30 23:41:19,response,3,13
1614541,"I think this will not work if we get multiple properties and the first one is not ""JDK_SYMLINK"" - the if will get skipped and we'll send nil on the ch, even if the next prop was ""JDK_SYMLINK.""

This looks pretty dangerous being async - if there is ever ",2018-08-31 05:19:14,feedback,1,9
8324668,Misunderstood your previous feedback. Submitting new diff...,2018-08-31 09:57:50,response,0,13
912560,Not sure why you'd limit action results. I thought those are supposed to be small but I could be mistaken?,2018-09-19 03:36:16,response,-1,10
1614541,"It's more about controlling any access to the underlying resource, until we do something smarter like limit by bytes and use digests to count concurrent access.",2018-09-19 04:22:30,response,-2,6
912560,"Fair enough, if you have other plans in mind.",2018-09-19 04:33:27,response,1,13
912560,Is it a possibility/problem if hash is EmptySha but size is not empty?,2018-09-19 06:43:53,feedback,2,6
1614541,"It's unlikely but possible that could get passed somehow, but it's essentially an invalid digest and a sign that something was not computed or passed in correctly. Checking it is on the pedantic side but won't hide any errors that should surface because o",2018-09-19 06:51:49,feedback,0,4
8324668,Wonder if we'll want this to be Warn or Error level...,2018-09-29 01:09:49,response,-1,4
8324668,do we need a `if runType == runner.RunTypeBazel`?,2018-10-09 03:33:19,response,0,10
1614541,"yes, good catch, looks like a few of these are applicable",2018-10-09 03:45:45,response,2,13
8324668,ditto,2018-10-12 05:27:55,response,0,13
8324668,think this one needs an `if runType = runner.RunTypeBazel` too,2018-10-12 05:27:47,response,-2,5
1614541,"this one's OK, in a runtype bazel code path already",2018-10-12 22:29:15,response,1,10
1614541,"this one was bad, fixed",2018-10-12 22:29:18,response,-1,13
2061461,"I have no idea what this does, but if the branch passes I won't argue with it.",2018-02-07 10:05:10,response,1,13
32869,https://unix.stackexchange.com/questions/122845/using-a-b-for-variable-assignment-in-scripts,2018-02-07 10:06:20,response,0,3
2465,"After a bit more exploring of modal-on-modal behavior, I noticed that `[viewController.presentedViewController dismissViewControllerAnimated:YES completion:nil];` was actually unnecessary since `SFSafariViewController` will dismiss by itself on ""dismiss"" ",2018-03-14 09:34:50,response,1,5
30452,"this doesn't look unmanageable.

but as an alternative you might find https://github.com/dwijnand/sbt-travisci useful.",2018-03-26 16:56:20,suggestion,-1,9
2061461,Do we still use _root_ in semanticdb 4.0?,2018-07-24 06:16:56,response,-1,9
2061461,Why is this AnyRef with Permit instead of just Permit?,2018-07-24 06:28:53,suggestion,-2,11
2061461,"I'm not intuitively understanding what items need _root_, like why scala.Tuple2 needs it but parser.this.Parser does not.",2018-07-24 06:31:25,response,-1,11
32869,"We no longer use the `_root_` prefix in the recent versions of SemanticDB, however we need this prefix in RscCompat to avoid inadvertent name capture until https://github.com/twitter/rsc/issues/141 is fixed.",2018-07-24 06:39:37,response,0,1
32869,"Return types produced by RscCompat directly mirror the return types inferred by Scalac. 

In this case, Scalac infers the return type as `AnyRef with Promise`, because that's the normalized representation for the type of the anonymous class on the right",2018-07-24 06:46:29,response,0,10
32869,"Current version of RscCompat qualifies everything as much as possible. In the case of `this` types, their qualifier must be an identifier, so we have to say `parsers.this.Parser`, not `com.twitter.util.Credentials.parser.this.Parser`.",2018-07-24 06:49:55,response,0,9
824906,"Why is `InfoNotes` a `class` that is only instantiated once per instance of `TypePrinter` rather than an `object` in `class TypePrinter`?

Similarly for `GenSym` below.

Is this because you're thinking about moving these classes outside of `TypePrinte",2018-07-24 06:31:49,suggestion,-2,11
824906,"How about handling destructuring binds for `val` and `var`? Currently they just go to `case _`, but at a minimum you should log a not implemented warning and include a `FIXME` comment.",2018-07-24 06:19:10,suggestion,-1,4
824906,How is switching from `.toTypeMessage` to `.asMessage` related to introducing `RscCompat`?,2018-07-24 06:15:04,suggestion,-1,10
824906,Add a brief comment explaining what a trivial prefix is. I don't really understand what's going on in here.,2018-07-24 06:47:26,suggestion,-2,3
824906,"My understanding is ""λ"" is just a local type variable that the type lambda is bound to, but other names could be used instead. So that means the generated code could be stylistically inconsistent with other uses of type lambdas in the codebase, right? It ",2018-07-24 07:09:06,response,-1,9
824906,"It would help with readability to add a comment pointing out that `sym.desc` comes from an implicit conversion to `scala.meta.internal.semanticdb.Scala.ScalaSymbolOps`.

Yes, I realize that means I'm essentially asking to make the implicit more explicit",2018-07-24 06:22:43,suggestion,-1,3
32869,"Tangentially. RscCompat requires the latest version of Scalameta (https://github.com/scalameta/scalameta/pull/1716), and upgrading to that version requires this change. I rebased the PR to factor out the upgrade into a separate commit: https://github.com/",2018-07-24 08:45:56,suggestion,0,9
32869,Fixed.,2018-07-24 08:49:17,response,0,13
32869,"It's the other way around, actually - both of these classes were copy/pasted from elsewhere. You're right though - they both can be turned into objects. Fixed.",2018-07-24 08:50:04,response,1,11
32869,"`λ` is a somewhat idiomatic to call this helper type alias, though it's definitely not a standard. As you said, it would be good to have this configurable.",2018-07-24 08:51:43,response,1,11
32869,"I'm not completely sure about what exactly needs to be done in RscCompat, so I'd like to avoid extra noise on the console for the time being. However, I've introduced a fixme comment and added the corresponding ticket to the current milestone.",2018-07-24 08:58:17,response,1,4
32869,"Extension methods like this one (e.g. `sym.owner`) are used very frequently across Scalameta, Scalafix and Rsc, so adding comments like that will likely be hard to pull off.

However, I do recognize the fact that the `scala.meta.internal.semanticdb` API",2018-07-24 09:04:39,response,-1,3
30452,(complete side-note: this is also available as [absolutePath](https://github.com/sbt/sbt/blob/v0.13.17/util/io/src/main/scala/sbt/Path.scala#L28) if you'd like),2018-07-26 13:20:52,suggestion,1,9
32869,Very nice!! I'm going to use this right away. Thank you :),2018-07-26 13:42:09,response,6,13
32869,"I believe you'll need `str(""()"")` here.",2018-07-27 03:51:43,feedback,0,1
32869,It looks like `pprintSym` would be a better name.,2018-07-27 03:54:01,suggestion,-2,2
32869,"On a second thought, there seems to be a simpler solution for the limited subset of trees we're interested in: 1) get the original text via `doc.substring(range)`, 2) parse that text via `.parse[m.Term]`, 3) if the resulting term is ApplyInfix, insert par",2018-07-27 03:50:32,suggestion,0,7
32869,"Looks like this is what you need: https://github.com/xeno-by/scalameta/blob/master/semanticdb/metap/src/main/scala/scala/meta/internal/metap/RangePrinter.scala#L21-L45. Let's use that logic for now, and then we'll properly expose it in `scala.meta.Positio",2018-07-27 03:47:10,suggestion,0,9
32869,Looks like we don't need this logic at all. See below.,2018-07-27 03:24:56,response,-2,7
32869,"How about `typePrinter.pprint(s.TypeRef(s.NoType, sym, Nil))`? This will avoid the need for any changes to `TypePrinter`.",2018-07-27 03:55:10,suggestion,-1,7
32869,Why does this method need to take `env`?,2018-07-27 03:52:35,response,-2,9
32869,`positionToTree`,2018-07-27 02:58:23,suggestion,-1,2
32869,See related comment to the output test.,2018-07-27 03:52:23,response,0,12
32869,Same question about `env`.,2018-07-27 03:52:41,response,0,9
32869,"Also, it looks like we probably don't need this map at all. See below.",2018-07-27 03:24:30,response,-2,7
32869,I think you should be able to do `rewriteTargets.map.asPatch` instead of having an explicit accumulator.,2018-07-27 02:59:03,suggestion,-1,10
32869,"I suggest we print originals for macro expansions, so that the code with inserted synthetics can not only successfully compile, but also successfully run and pass tests.",2018-07-27 02:18:52,feedback,0,4
32869,"Try using `ctx.tree.collect` instead of manual traversal like it's done in ExplicitResultTypes. For RscCompat, manual traversal is necessary because we want to limit the scope, but for this rule I think the standard `ctx.tree.collect` will be fine.",2018-07-27 02:57:44,suggestion,-1,10
32869,Why have this as a separate variable?,2018-07-27 03:53:22,response,-2,11
32995077,"This does something different. I just want to print the name of the symbol for this method, not the fully qualified path.",2018-07-27 04:17:46,response,-1,1
32869,"Okay let's use this code as is for now. Later on, I'll refactor the printers.",2018-07-27 04:38:31,response,1,8
32995077,"It appears that I cannot build an Env made out of scopes with a `collect`, and I need that for the type printer.",2018-07-27 04:45:41,response,0,11
32995077,I was able to replace this by just looking up the names in the document's symbols.,2018-07-27 05:17:34,response,-1,2
32869,Fair enough.,2018-07-27 07:19:57,response,-1,13
32869,@maxov This is needed to work around the extravagant way how ClassTag synthesis is done in Scalac: https://github.com/scala/scala/blob/v2.12.6/src/library/scala/reflect/package.scala#L59-L63. Adding this mechanism to Scalac wasn't my brightest idea ???? ,2018-07-27 10:14:12,response,0,9
32869,This brings @maxov's improvements to MacroExpansionTree (https://github.com/scalameta/scalameta/pull/1722) and my improvements to m.Position (https://github.com/scalameta/scalameta/pull/1723).,2018-07-27 10:10:26,response,2,13
32869,"@maxov It turned out that we never tested that scalafixOutput compiles, and it didn't ????",2018-07-27 10:11:28,response,0,12
32869,"@maxov Not sure what you meant here, so I commented this out. Please add a test in a follow-up PR (or completely delete this check).",2018-07-27 10:12:41,response,-1,12
32869,"@retronym Have you by any chance published Jardiff to Maven Central? I couldn't find the binaries, so I had to copy/paste the source code.",2018-10-09 08:41:34,response,-2,5
